{"version":3,"sources":["webpack:///webpack/bootstrap 667be053c569fbd7604b","webpack:///../node_modules/@polymer/polymer/lib/utils/boot.js","webpack:///(webpack)/buildin/global.js","webpack:///../node_modules/@polymer/polymer/lib/utils/case-map.js","webpack:///../node_modules/@polymer/polymer/lib/utils/mixin.js","webpack:///../node_modules/lit-html/lit-html.js","webpack:///../node_modules/@polymer/polymer/lib/utils/async.js","webpack:///../node_modules/@polymer/polymer/lib/utils/path.js","webpack:///../src/core/utils/property-effects-types.js","webpack:///../node_modules/@polymer/polymer/lib/utils/resolve-url.js","webpack:///../node_modules/redux/es/createStore.js","webpack:///../node_modules/lodash-es/isPlainObject.js","webpack:///../node_modules/lodash-es/_Symbol.js","webpack:///../node_modules/redux/es/utils/warning.js","webpack:///../node_modules/redux/es/compose.js","webpack:///../src/core/mixins/element-mixin.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///../index.js","webpack:///../src/core/components/main-router/index.js","webpack:///../src/core/mixins/property-effects.js","webpack:///../node_modules/@polymer/polymer/lib/mixins/property-accessors.js","webpack:///../src/core/mixins/template-stamp.js","webpack:///../src/core/utils/host-stack.js","webpack:///../src/core/utils/effects.js","webpack:///../node_modules/@polymer/polymer/lib/utils/settings.js","webpack:///../src/core/utils/data-api.js","webpack:///../node_modules/@polymer/polymer/lib/utils/flattened-nodes-observer.js","webpack:///../node_modules/@polymer/polymer/lib/utils/array-splice.js","webpack:///../src/core/mixins/location-mixin.js","webpack:///../src/core/mixins/query-params-mixin.js","webpack:///../node_modules/path-to-regexp/index.js","webpack:///../src/core/fragments/index.js","webpack:///../src/authentication/index.js","webpack:///../src/core/components/main-router/template.js","webpack:///../src/core/components/main-router/style.scss?9286","webpack:///../src/core/components/main-router/style.scss","webpack:///../src/core/components/state-manager/index.js","webpack:///../node_modules/redux/es/index.js","webpack:///../node_modules/lodash-es/_baseGetTag.js","webpack:///../node_modules/lodash-es/_root.js","webpack:///../node_modules/lodash-es/_freeGlobal.js","webpack:///../node_modules/lodash-es/_getRawTag.js","webpack:///../node_modules/lodash-es/_objectToString.js","webpack:///../node_modules/lodash-es/_getPrototype.js","webpack:///../node_modules/lodash-es/_overArg.js","webpack:///../node_modules/lodash-es/isObjectLike.js","webpack:///../node_modules/symbol-observable/index.js","webpack:///../node_modules/symbol-observable/lib/index.js","webpack:///(webpack)/buildin/module.js","webpack:///../node_modules/symbol-observable/lib/ponyfill.js","webpack:///../node_modules/redux/es/combineReducers.js","webpack:///../node_modules/redux/es/bindActionCreators.js","webpack:///../node_modules/redux/es/applyMiddleware.js","webpack:///../src/core/mixins/polymer-redux.js"],"names":["window","JSCompiler_renameProperty","prop","obj","Polymer","g","Function","eval","e","module","exports","dashToCamelCase","camelToDashCase","caseMap","DASH_TO_CAMEL","CAMEL_TO_DASH","dash","indexOf","replace","m","toUpperCase","camel","toLowerCase","dedupeId","MixinFunction","prototype","__mixinApplications","__mixinSet","dedupingMixin","mixin","mixinApplications","WeakMap","mixinDedupeId","base","baseSet","map","extended","get","set","mixinSet","Object","create","html","render","templates","Map","strings","template","undefined","Template","values","TemplateResult","result","container","partCallback","defaultPartCallback","instance","__templateInstance","_partCallback","update","TemplateInstance","fragment","_clone","child","lastChild","removeChild","appendChild","exprMarker","Math","random","TemplatePart","type","index","name","rawName","parts","element","document","createElement","innerHTML","join","walker","createTreeWalker","content","partIndex","nodesToRemove","nextNode","node","currentNode","nodeType","hasAttributes","attributes","i","length","attribute","item","attributeStrings","value","split","attributeString","rawNameString","substring","match","push","removeAttribute","nodeValue","parent","parentNode","lastIndex","textContent","insertBefore","Text","trim","n","getValue","part","__litDirective","directive","f","AttributePart","size","startIndex","text","v","Array","isArray","Symbol","iterator","t","setAttribute","NodePart","startNode","endNode","_previousValue","_setText","_setTemplateResult","_setIterable","Node","_setNode","then","_setPromise","clear","_insert","nextSibling","previousSibling","TEXT_NODE","itemParts","itemPart","itemStart","previousPart","setValue","lastPart","templatePart","Error","_parts","valueIndex","importNode","AsyncInterface","microtaskCurrHandle","microtaskLastHandle","microtaskCallbacks","microtaskNodeContent","microtaskNode","createTextNode","MutationObserver","microtaskFlush","observe","characterData","len","cb","setTimeout","splice","timeOut","after","delay","run","fn","cancel","clearTimeout","bind","animationFrame","requestAnimationFrame","cancelAnimationFrame","idlePeriod","requestIdleCallback","handle","cancelIdleCallback","microTask","callback","idx","isPath","root","isAncestor","isDescendant","translate","matches","normalize","path","dotIndex","slice","newBase","args","toString","j","info","last","isDeep","TYPES","COMPUTE","REFLECT","NOTIFY","PROPAGATE","OBSERVE","READ_ONLY","CSS_URL_RX","ABS_URL","workingURL","resolveDoc","resolveUrl","url","baseURI","test","u","URL","pathname","href","location","implementation","createHTMLDocument","head","anchor","body","resolveCss","cssText","pre","post","pathFromUrl","lastIndexOf","createStore","ActionTypes","INIT","reducer","preloadedState","enhancer","_ref2","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","getState","subscribe","listener","isSubscribed","unsubscribe","dispatch","action","listeners","replaceReducer","nextReducer","observable","_ref","outerSubscribe","observer","TypeError","observeState","next","objectTag","funcProto","objectProto","funcToString","hasOwnProperty","objectCtorString","call","isPlainObject","proto","Ctor","constructor","warning","message","console","error","compose","_len","arguments","funcs","_key","arg","reduce","a","b","apply","_regLog","register","dumpRegistrations","caseMap$0","ElementMixin","polymerElementBase","ownPropertiesForClass","klass","__ownProperties","properties","ownObserversForClass","__ownObservers","observers","flattenProperties","flattenedProps","props","p","o","propertiesForClass","__classProperties","superCtor","getPrototypeOf","PolymerElement","assign","propertyDefaultsForClass","__classPropertyDefaults","hasClassFinalized","finalizeClassAndSuper","finalize","finalizeClass","__finalized","is","finalizeProperties","finalizeObservers","createPropertyFromConfig","dynamicFns","_createMethodObserver","allProps","computed","readOnly","_hasReadOnlyEffect","_createComputedProperty","_createReadOnlyProperty","reflectToAttribute","_hasReflectEffect","_createReflectedProperty","notify","_hasNotifyEffect","_createNotifyingProperty","_createPropertyObserver","instanceCount","p$","_hasAccessor","_setPendingProperty","ShadyCSS","prepareTemplate","styleElement","_enableProperties","_createPropertyAccessor","_attachDom","attachShadow","shadowRoot","mode","old","property","_attributeToProperty","styleSubtree","list","__observedAttributes","registrations","log","forEach","updateStyles","styleDocument","useSourceMap","cssWithMappingToString","modules","mediaQuery","alreadyImportedModules","id","cssMapping","btoa","sourceMapping","toComment","sourceURLs","sources","source","sourceRoot","concat","sourceMap","base64","unescape","encodeURIComponent","JSON","stringify","data","ROUTER_ACTION","PARAMS","ROUTE","router","params","route","MainRouter","statePath","currentRoute","String","_routes","state","_observer","_contentAdded","addedNodes","filter","ELEMENT_NODE","disconnect","_listener","optTapHandler","optAction","optActionHandler","optDuration","pages","page","classList","add","getAttribute","auth","_pathChanged","routeName","entries","keys","re","exec","Promise","res","_loadPage","catch","routes","remove","nodeName","reload","querySelector","scrollTo","ga","HTMLElement","customElements","define","CaseMap","PropertyEffectsType","PropertyEffects","propertyEffectsBase","superClass","__dataClientsReady","__dataPendingClients","__dataToNotify","__dataLinkedPaths","__dataHasPaths","__dataCompoundStorage","__dataHost","__dataTemp","__dataClientsInitialized","__data","__dataPending","__dataOld","__computeEffects","__reflectEffects","__notifyEffects","__propagateEffects","__observeEffects","__readOnly","__dataCounter","registerHost","effect","effects","Boolean","_hasPropertyEffect","shouldNotify","isPathNotification","__dataHasAccessor","prevProps","_shouldPropertyChange","_invalidateProperties","__dataReady","_flushProperties","client","_readyClients","__enableOrFlushClients","clients","__dataEnabled","setReadOnly","_setPendingPropertyOrPath","_flushClients","currentProps","changedProps","oldProps","hasPaths","notifyProps","_propagatePropertyChanges","to","from","splices","array","items","ret","hadLength","pop","start","deleteCount","floor","shift","unshift","propPath","protectedSetter","_addPropertyEffect","_setProperty","methodName","dynamicFn","trigger","expression","sig","eventName","attr","warn","attrName","microtask","nativeProperties","getOwnPropertyNames","saveAccessorValue","model","__dataProto","PropertyAccessors","a$","observedAttributes","__serializing","__dataInvalid","__dataInstanceProps","_initializeProperties","_initializeProtoProperties","hasAttribute","_valueToNodeAttribute","_deserializeValue","str","_serializeValue","Date","x","outValue","Number","parse","defineProperty","changed","_initializeInstanceProperties","ready","_propertiesChanged","createNodeEventHandler","context","_methodHost","handler","detail","_addEventListenerToNode","addEventListener","removeEventListener","stack","inst","host","_enqueueClient","beginHosting","endHosting","stackLen","ensureOwnEffectMap","runEffects","runEffectsForProperty","pathMatchesTrigger","runObserverEffect","runNotifyEffects","notifyPath","dispatchNotifyEvent","runNotifyEffect","handleNotification","runReflectEffect","runComputedEffects","runComputedEffect","computeLinkedPaths","createMethodEffect","runMethodEffect","marshalArgs","parseMethod","parseArgs","parseArg","emptyArray","protoFx","instFx","extraArgs","ran","rootProperty","fxs","l","fx","lastRun","triggerPath","structured","wildcard","changedProp","notified","queueProperty","dispatchEvent","CustomEvent","event","fromProp","toPath","negate","fromPath","target","_propertyToAttribute","computeEffects","inputProps","computedProp","methodInfo","links","link","effectFn","static","literal","baseChanged","argList","rawArg","fc","settings","useShadow","ShadyDOM","useNativeCSSProperties","nativeCss","useNativeCustomElements","polyfillWrapFlushCallback","Settings","rootPath","setRootPath","sanitizeDOMValue","setSanitizeDOMValue","newSanitizeDOMValue","notifySplices","notifySplice","upper","splicesPath","indexSplices","addedCount","removed","object","isSlot","localName","FlattenedNodesObserver","assignedNodes","flatten","childNodes","_shadyChildrenObserver","_nativeChildrenObserver","_connected","_target","_effectiveNodes","_scheduled","_boundSchedule","_schedule","connect","_listenSlots","children","observeChildren","mutations","_processMutations","childList","_unlistenSlots","unobserveChildren","flush","_processSlotMutations","mutation","removedNodes","takeRecords","newNodes","getFlattenedNodes","s","didFlush","nodeList","newSplice","EDIT_LEAVE","EDIT_UPDATE","EDIT_ADD","EDIT_DELETE","calcEditDistances","current","currentStart","currentEnd","oldStart","oldEnd","rowCount","columnCount","distances","equals","north","west","spliceOperationsFromEditDistances","edits","northWest","min","reverse","calcSplices","prefixCount","suffixCount","minLength","sharedPrefix","sharedSuffix","ops","oldIndex","searchLength","index1","index2","count","calculateSplices","previous","currentValue","previousValue","LOCATION_ACTION","PATH","QUERY","HASH","UPDATE","query","hash","history","pushState","title","urlSpaceRegex","dwellTime","_urlSpaceRegExp","_lastChangedAt","_initialized","_boundHashChanged","_hashChanged","_boundUrlChanged","_urlChanged","_boundGlobalOnClick","_globalOnClick","performance","now","decodeURIComponent","_dontUpdateUrl","search","_updateUrl","partiallyEncodedPath","encodeURI","partiallyEncodedQuery","partiallyEncodedHash","newUrl","_getUrl","fullNewUrl","protocol","shouldReplace","replaceState","defaultPrevented","_getSameOriginLinkHref","preventDefault","button","metaKey","ctrlKey","eventPath","composedPath","tagName","top","origin","urlOrigin","normalizedHref","fullNormalizedHref","RegExp","QUERYPARAMS_ACTION","paramsObject","_dontReact","paramsString","_decodeParams","_encodeParams","encodedParams","key","paramString","paramList","param","pathToRegexp","compile","tokensToFunction","tokensToRegExp","PATH_REGEXP","options","tokens","defaultDelimiter","delimiter","delimiters","pathEscaped","escaped","offset","prev","capture","group","modifier","k","partial","repeat","optional","pattern","prefix","escapeGroup","escapeString","substr","encode","token","segment","flags","sensitive","regexpToRegexp","groups","arrayToRegexp","stringToRegexp","strict","end","endsWith","reducers","initialStore","store","ReduxMixin","isCrushed","combineReducers","bindActionCreators","applyMiddleware","nullTag","undefinedTag","symToStringTag","toStringTag","baseGetTag","freeSelf","self","freeGlobal","global","nativeObjectToString","getRawTag","isOwn","tag","unmasked","objectToString","getPrototype","overArg","func","transform","isObjectLike","require","_ponyfill","_ponyfill2","_interopRequireDefault","__esModule","webpackPolyfill","deprecate","paths","enumerable","symbolObservablePonyfill","_Symbol","getUndefinedStateErrorMessage","actionType","actionName","getUnexpectedStateShapeWarningMessage","inputState","unexpectedKeyCache","reducerKeys","argumentName","unexpectedKeys","assertReducerShape","initialState","finalReducers","finalReducerKeys","shapeAssertionError","combination","warningMessage","hasChanged","nextState","_i","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","actionCreators","boundActionCreators","_extends","middlewares","_dispatch","chain","middlewareAPI","middleware","PolymerRedux","every","subscribers","bindings","propertiesChanged","unbind","off","collect","what","which","actions","configurable","_reduxActions","originalAction"],"mappings":"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","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules, executeModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [], result;\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules, executeModules);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// objects to store loaded and loading chunks\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData === 0) {\n \t\t\treturn new Promise(function(resolve) { resolve(); });\n \t\t}\n\n \t\t// a Promise means \"currently loading\".\n \t\tif(installedChunkData) {\n \t\t\treturn installedChunkData[2];\n \t\t}\n\n \t\t// setup Promise in chunk cache\n \t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t});\n \t\tinstalledChunkData[2] = promise;\n\n \t\t// start chunk loading\n \t\tvar head = document.getElementsByTagName('head')[0];\n \t\tvar script = document.createElement('script');\n \t\tscript.type = 'text/javascript';\n \t\tscript.charset = 'utf-8';\n \t\tscript.async = true;\n \t\tscript.timeout = 120000;\n\n \t\tif (__webpack_require__.nc) {\n \t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t}\n \t\tscript.src = __webpack_require__.p + \"\" + ({\"0\":\"landing-page\"}[chunkId]||chunkId) + \".\" + chunkId + \".js\";\n \t\tvar timeout = setTimeout(onScriptComplete, 120000);\n \t\tscript.onerror = script.onload = onScriptComplete;\n \t\tfunction onScriptComplete() {\n \t\t\t// avoid mem leaks in IE.\n \t\t\tscript.onerror = script.onload = null;\n \t\t\tclearTimeout(timeout);\n \t\t\tvar chunk = installedChunks[chunkId];\n \t\t\tif(chunk !== 0) {\n \t\t\t\tif(chunk) {\n \t\t\t\t\tchunk[1](new Error('Loading chunk ' + chunkId + ' failed.'));\n \t\t\t\t}\n \t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t}\n \t\t};\n \t\thead.appendChild(script);\n\n \t\treturn promise;\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 667be053c569fbd7604b","window.JSCompiler_renameProperty = function(prop, obj) { return prop; }\n\n/** @namespace */\nlet Polymer;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@polymer/polymer/lib/utils/boot.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n// WEBPACK FOOTER //\n// (webpack)/buildin/global.js","import './boot.js';\n\nconst caseMap = {};\nconst DASH_TO_CAMEL = /-[a-z]/g;\nconst CAMEL_TO_DASH = /([A-Z])/g;\n\nexport function dashToCamelCase(dash) {\n  return caseMap[dash] || (\n    caseMap[dash] = dash.indexOf('-') < 0 ? dash : dash.replace(DASH_TO_CAMEL,\n      (m) => m[1].toUpperCase()\n    )\n  );\n}\n\nexport function camelToDashCase(camel) {\n  return caseMap[camel] || (\n    caseMap[camel] = camel.replace(CAMEL_TO_DASH, '-$1').toLowerCase()\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@polymer/polymer/lib/utils/case-map.js","import './boot.js';\n\n// unique global id for deduping mixins.\nlet dedupeId = 0;\n\n/**\n * @constructor\n * @extends {Function}\n */\nfunction MixinFunction(){}\n/** @type {(WeakMap | undefined)} */\nMixinFunction.prototype.__mixinApplications;\n/** @type {(Object | undefined)} */\nMixinFunction.prototype.__mixinSet;\n\nexport const dedupingMixin = function(mixin) {\n  let mixinApplications = /** @type {!MixinFunction} */(mixin).__mixinApplications;\n  if (!mixinApplications) {\n    mixinApplications = new WeakMap();\n    /** @type {!MixinFunction} */(mixin).__mixinApplications = mixinApplications;\n  }\n  // maintain a unique id for each mixin\n  let mixinDedupeId = dedupeId++;\n  function dedupingMixin(base) {\n    let baseSet = /** @type {!MixinFunction} */(base).__mixinSet;\n    if (baseSet && baseSet[mixinDedupeId]) {\n      return base;\n    }\n    let map = mixinApplications;\n    let extended = map.get(base);\n    if (!extended) {\n      extended = /** @type {!Function} */(mixin)(base);\n      map.set(base, extended);\n    }\n    // copy inherited mixin set from the extended class, or the base class\n    // NOTE: we avoid use of Set here because some browser (IE11)\n    // cannot extend a base Set via the constructor.\n    let mixinSet = Object.create(/** @type {!MixinFunction} */(extended).__mixinSet || baseSet || null);\n    mixinSet[mixinDedupeId] = true;\n    /** @type {!MixinFunction} */(extended).__mixinSet = mixinSet;\n    return extended;\n  }\n\n  return dedupingMixin;\n};\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@polymer/polymer/lib/utils/mixin.js","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n// The first argument to JS template tags retain identity across multiple\n// calls to a tag for the same literal, so we can cache work done per literal\n// in a Map.\nconst templates = new Map();\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport function html(strings, ...values) {\n    let template = templates.get(strings);\n    if (template === undefined) {\n        template = new Template(strings);\n        templates.set(strings, template);\n    }\n    return new TemplateResult(template, values);\n}\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(template, values) {\n        this.template = template;\n        this.values = values;\n    }\n}\n/**\n * Renders a template to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n */\nexport function render(result, container, partCallback = defaultPartCallback) {\n    let instance = container.__templateInstance;\n    // Repeat render, just call update()\n    if (instance !== undefined && instance.template === result.template &&\n        instance._partCallback === partCallback) {\n        instance.update(result.values);\n        return;\n    }\n    // First render, create a new TemplateInstance and append it\n    instance = new TemplateInstance(result.template, partCallback);\n    container.__templateInstance = instance;\n    const fragment = instance._clone();\n    instance.update(result.values);\n    let child;\n    while ((child = container.lastChild)) {\n        container.removeChild(child);\n    }\n    container.appendChild(fragment);\n}\n/**\n * An expression marker with embedded unique key to avoid\n * https://github.com/PolymerLabs/lit-html/issues/62\n */\nconst exprMarker = `{{lit-${Math.random()}}}`;\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport class TemplatePart {\n    constructor(type, index, name, rawName, strings) {\n        this.type = type;\n        this.index = index;\n        this.name = name;\n        this.rawName = rawName;\n        this.strings = strings;\n    }\n}\nexport class Template {\n    constructor(strings) {\n        this.parts = [];\n        this.element = document.createElement('template');\n        this.element.innerHTML = strings.join(exprMarker);\n        const walker = document.createTreeWalker(this.element.content, 5 /* elements & text */);\n        let index = -1;\n        let partIndex = 0;\n        const nodesToRemove = [];\n        while (walker.nextNode()) {\n            index++;\n            const node = walker.currentNode;\n            if (node.nodeType === 1 /* ELEMENT_NODE */) {\n                if (!node.hasAttributes())\n                    continue;\n                const attributes = node.attributes;\n                for (let i = 0; i < attributes.length; i++) {\n                    const attribute = attributes.item(i);\n                    const attributeStrings = attribute.value.split(exprMarker);\n                    if (attributeStrings.length > 1) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute attribute\n                        const attributeString = strings[partIndex];\n                        // Trim the trailing literal value if this is an interpolation\n                        const rawNameString = attributeString.substring(0, attributeString.length - attributeStrings[0].length);\n                        // Find the attribute name\n                        const rawName = rawNameString.match(/((?:\\w|[.\\-_$])+)=[\"']?$/)[1];\n                        this.parts.push(new TemplatePart('attribute', index, attribute.name, rawName, attributeStrings));\n                        node.removeAttribute(attribute.name);\n                        partIndex += attributeStrings.length - 1;\n                        i--;\n                    }\n                }\n            }\n            else if (node.nodeType === 3 /* TEXT_NODE */) {\n                const strings = node.nodeValue.split(exprMarker);\n                if (strings.length > 1) {\n                    const parent = node.parentNode;\n                    const lastIndex = strings.length - 1;\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                    // We keep this current node, but reset its content to the last\n                    // literal part. We insert new literal nodes before this so that the\n                    // tree walker keeps its position correctly.\n                    node.textContent = strings[lastIndex];\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        parent.insertBefore(new Text(strings[i]), node);\n                        this.parts.push(new TemplatePart('node', index++));\n                    }\n                }\n                else if (!node.nodeValue.trim()) {\n                    nodesToRemove.push(node);\n                    index--;\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nexport const getValue = (part, value) => {\n    // `null` as the value of a Text node will render the string 'null'\n    // so we convert it to undefined\n    if (value != null && value.__litDirective === true) {\n        value = value(part);\n    }\n    return value === null ? undefined : value;\n};\nexport const directive = (f) => {\n    f.__litDirective = true;\n    return f;\n};\nexport class AttributePart {\n    constructor(instance, element, name, strings) {\n        this.instance = instance;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.size = strings.length - 1;\n    }\n    setValue(values, startIndex) {\n        const strings = this.strings;\n        let text = '';\n        for (let i = 0; i < strings.length; i++) {\n            text += strings[i];\n            if (i < strings.length - 1) {\n                const v = getValue(this, values[startIndex + i]);\n                if (v &&\n                    (Array.isArray(v) || typeof v !== 'string' && v[Symbol.iterator])) {\n                    for (const t of v) {\n                        // TODO: we need to recursively call getValue into iterables...\n                        text += t;\n                    }\n                }\n                else {\n                    text += v;\n                }\n            }\n        }\n        this.element.setAttribute(this.name, text);\n    }\n}\nexport class NodePart {\n    constructor(instance, startNode, endNode) {\n        this.instance = instance;\n        this.startNode = startNode;\n        this.endNode = endNode;\n    }\n    setValue(value) {\n        value = getValue(this, value);\n        if (value === null ||\n            !(typeof value === 'object' || typeof value === 'function')) {\n            // Handle primitive values\n            // If the value didn't change, do nothing\n            if (value === this._previousValue) {\n                return;\n            }\n            this._setText(value);\n        }\n        else if (value instanceof TemplateResult) {\n            this._setTemplateResult(value);\n        }\n        else if (Array.isArray(value) || value[Symbol.iterator]) {\n            this._setIterable(value);\n        }\n        else if (value instanceof Node) {\n            this._setNode(value);\n        }\n        else if (value.then !== undefined) {\n            this._setPromise(value);\n        }\n        else {\n            // Fallback, will render the string representation\n            this._setText(value);\n        }\n    }\n    _insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    _setNode(value) {\n        this.clear();\n        this._insert(value);\n        this._previousValue = value;\n    }\n    _setText(value) {\n        const node = this.startNode.nextSibling;\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === Node.TEXT_NODE) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if _previousValue is\n            // primitive?\n            node.textContent = value;\n        }\n        else {\n            this._setNode(new Text(value));\n        }\n        this._previousValue = value;\n    }\n    _setTemplateResult(value) {\n        let instance;\n        if (this._previousValue &&\n            this._previousValue.template === value.template) {\n            instance = this._previousValue;\n        }\n        else {\n            instance =\n                new TemplateInstance(value.template, this.instance._partCallback);\n            this._setNode(instance._clone());\n            this._previousValue = instance;\n        }\n        instance.update(value.values);\n    }\n    _setIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _previousValue is an array, then the previous render was of an\n        // iterable and _previousValue will contain the NodeParts from the previous\n        // render. If _previousValue is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this._previousValue)) {\n            this.clear();\n            this._previousValue = [];\n        }\n        // Lets of keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this._previousValue;\n        let partIndex = 0;\n        for (const item of value) {\n            // Try to reuse an existing part\n            let itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                // If we're creating the first item part, it's startNode should be the\n                // container's startNode\n                let itemStart = this.startNode;\n                // If we're not creating the first part, create a new separator marker\n                // node, and fix up the previous part's endNode to point to it\n                if (partIndex > 0) {\n                    const previousPart = itemParts[partIndex - 1];\n                    itemStart = previousPart.endNode = new Text();\n                    this._insert(itemStart);\n                }\n                itemPart = new NodePart(this.instance, itemStart, this.endNode);\n                itemParts.push(itemPart);\n            }\n            itemPart.setValue(item);\n            partIndex++;\n        }\n        if (partIndex === 0) {\n            this.clear();\n            this._previousValue = undefined;\n        }\n        else if (partIndex < itemParts.length) {\n            const lastPart = itemParts[partIndex - 1];\n            this.clear(lastPart.endNode.previousSibling);\n            lastPart.endNode = this.endNode;\n        }\n    }\n    _setPromise(value) {\n        value.then((v) => {\n            if (this._previousValue === value) {\n                this.setValue(v);\n            }\n        });\n        this._previousValue = value;\n    }\n    clear(startNode = this.startNode) {\n        let node;\n        while ((node = startNode.nextSibling) !== this.endNode) {\n            node.parentNode.removeChild(node);\n        }\n    }\n}\nexport const defaultPartCallback = (instance, templatePart, node) => {\n    if (templatePart.type === 'attribute') {\n        return new AttributePart(instance, node, templatePart.name, templatePart.strings);\n    }\n    else if (templatePart.type === 'node') {\n        return new NodePart(instance, node, node.nextSibling);\n    }\n    throw new Error(`Unknown part type ${templatePart.type}`);\n};\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, partCallback = defaultPartCallback) {\n        this._parts = [];\n        this.template = template;\n        this._partCallback = partCallback;\n    }\n    update(values) {\n        let valueIndex = 0;\n        for (const part of this._parts) {\n            if (part.size === undefined) {\n                part.setValue(values[valueIndex]);\n                valueIndex++;\n            }\n            else {\n                part.setValue(values, valueIndex);\n                valueIndex += part.size;\n            }\n        }\n    }\n    _clone() {\n        const fragment = document.importNode(this.template.element.content, true);\n        if (this.template.parts.length > 0) {\n            const walker = document.createTreeWalker(fragment, 5 /* elements & text */);\n            const parts = this.template.parts;\n            let index = 0;\n            let partIndex = 0;\n            let templatePart = parts[0];\n            let node = walker.nextNode();\n            while (node != null && partIndex < parts.length) {\n                if (index === templatePart.index) {\n                    this._parts.push(this._partCallback(this, templatePart, node));\n                    templatePart = parts[++partIndex];\n                }\n                else {\n                    index++;\n                    node = walker.nextNode();\n                }\n            }\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=lit-html.js.map\n\n\n// WEBPACK FOOTER //\n// ../node_modules/lit-html/lit-html.js","import './boot.js';\n\n/** @typedef {{run: function(function(), number=):number, cancel: function(number)}} */\nlet AsyncInterface; // eslint-disable-line no-unused-vars\n\n// Microtask implemented using Mutation Observer\nlet microtaskCurrHandle = 0;\nlet microtaskLastHandle = 0;\nlet microtaskCallbacks = [];\nlet microtaskNodeContent = 0;\nlet microtaskNode = document.createTextNode('');\nnew window.MutationObserver(microtaskFlush).observe(microtaskNode, {characterData: true});\n\nfunction microtaskFlush() {\n  const len = microtaskCallbacks.length;\n  for (let i = 0; i < len; i++) {\n    let cb = microtaskCallbacks[i];\n    if (cb) {\n      try {\n        cb();\n      } catch (e) {\n        setTimeout(() => { throw e; });\n      }\n    }\n  }\n  microtaskCallbacks.splice(0, len);\n  microtaskLastHandle += len;\n}\n\nexport const timeOut = {\n  /**\n   * Returns a sub-module with the async interface providing the provided\n   * delay.\n   *\n   * @memberof Polymer.Async.timeOut\n   * @param {number} delay Time to wait before calling callbacks in ms\n   * @return {AsyncInterface} An async timeout interface\n   */\n  after(delay) {\n    return  {\n      run(fn) { return setTimeout(fn, delay); },\n      cancel: window.clearTimeout.bind(window)\n    };\n  },\n  /**\n   * Enqueues a function called in the next task.\n   *\n   * @memberof Polymer.Async.timeOut\n   * @param {Function} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run: window.setTimeout.bind(window),\n  /**\n   * Cancels a previously enqueued `timeOut` callback.\n   *\n   * @memberof Polymer.Async.timeOut\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   */\n  cancel: window.clearTimeout.bind(window)\n};\n\nexport const animationFrame = {\n  /**\n   * Enqueues a function called at `requestAnimationFrame` timing.\n   *\n   * @memberof Polymer.Async.animationFrame\n   * @param {Function} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run: window.requestAnimationFrame.bind(window),\n  /**\n   * Cancels a previously enqueued `animationFrame` callback.\n   *\n   * @memberof Polymer.Async.timeOut\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   */\n  cancel: window.cancelAnimationFrame.bind(window)\n};\n\nexport const idlePeriod = {\n  /**\n   * Enqueues a function called at `requestIdleCallback` timing.\n   *\n   * @memberof Polymer.Async.idlePeriod\n   * @param {function(IdleDeadline)} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestIdleCallback ?\n      window.requestIdleCallback(fn) :\n      window.setTimeout(fn, 16);\n  },\n  /**\n   * Cancels a previously enqueued `idlePeriod` callback.\n   *\n   * @memberof Polymer.Async.idlePeriod\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   */\n  cancel(handle) {\n    window.cancelIdleCallback ?\n      window.cancelIdleCallback(handle) :\n      window.clearTimeout(handle);\n  }\n};\n\nexport const microTask = {\n\n  /**\n   * Enqueues a function called at microtask timing.\n   *\n   * @memberof Polymer.Async.microTask\n   * @param {Function} callback Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(callback) {\n    microtaskNode.textContent = microtaskNodeContent++;\n    microtaskCallbacks.push(callback);\n    return microtaskCurrHandle++;\n  },\n\n  /**\n   * Cancels a previously enqueued `microTask` callback.\n   *\n   * @memberof Polymer.Async.microTask\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   */\n  cancel(handle) {\n    const idx = handle - microtaskLastHandle;\n    if (idx >= 0) {\n      if (!microtaskCallbacks[idx]) {\n        throw new Error('invalid async handle: ' + handle);\n      }\n      microtaskCallbacks[idx] = null;\n    }\n  }\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@polymer/polymer/lib/utils/async.js","import './boot.js';\n\nexport function isPath(path) {\n  return path.indexOf('.') >= 0;\n}\n\nexport function root(path) {\n  let dotIndex = path.indexOf('.');\n  if (dotIndex === -1) {\n    return path;\n  }\n  return path.slice(0, dotIndex);\n}\n\nexport function isAncestor(base, path) {\n  //     base.startsWith(path + '.');\n  return base.indexOf(path + '.') === 0;\n}\n\nexport function isDescendant(base, path) {\n  //     path.startsWith(base + '.');\n  return path.indexOf(base + '.') === 0;\n}\n\nexport function translate(base, newBase, path) {\n  return newBase + path.slice(base.length);\n}\n\nexport function matches(base, path) {\n  return (base === path) ||\n         isAncestor(base, path) ||\n         isDescendant(base, path);\n}\n\nexport function normalize(path) {\n  if (Array.isArray(path)) {\n    let parts = [];\n    for (let i=0; i<path.length; i++) {\n      let args = path[i].toString().split('.');\n      for (let j=0; j<args.length; j++) {\n        parts.push(args[j]);\n      }\n    }\n    return parts.join('.');\n  } else {\n    return path;\n  }\n}\n\nexport function split(path) {\n  if (Array.isArray(path)) {\n    return normalize(path).split('.');\n  }\n  return path.toString().split('.');\n}\n\nexport function get(root, path, info) {\n  let prop = root;\n  let parts = split(path);\n  // Loop over path parts[0..n-1] and dereference\n  for (let i=0; i<parts.length; i++) {\n    if (!prop) {\n      return;\n    }\n    let part = parts[i];\n    prop = prop[part];\n  }\n  if (info) {\n    info.path = parts.join('.');\n  }\n  return prop;\n}\n\nexport function set(root, path, value) {\n  let prop = root;\n  let parts = split(path);\n  let last = parts[parts.length-1];\n  if (parts.length > 1) {\n    // Loop over path parts[0..n-2] and dereference\n    for (let i=0; i<parts.length-1; i++) {\n      let part = parts[i];\n      prop = prop[part];\n      if (!prop) {\n        return;\n      }\n    }\n    // Set value to object at end of path\n    prop[last] = value;\n  } else {\n    // Simple property set\n    prop[path] = value;\n  }\n  return parts.join('.');\n}\n\nexport const isDeep = isPath;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@polymer/polymer/lib/utils/path.js","/**\n * Property effect types; effects are stored on the prototype using these keys\n * @enum {string}\n */\nconst TYPES = {\n  COMPUTE: '__computeEffects',\n  REFLECT: '__reflectEffects',\n  NOTIFY: '__notifyEffects',\n  PROPAGATE: '__propagateEffects',\n  OBSERVE: '__observeEffects',\n  READ_ONLY: '__readOnly'\n};\n\nexport default TYPES;\n\n\n\n// WEBPACK FOOTER //\n// ../src/core/utils/property-effects-types.js","import './boot.js';\n\nlet CSS_URL_RX = /(url\\()([^)]*)(\\))/g;\nlet ABS_URL = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\nlet workingURL;\nlet resolveDoc;\n/**\n * Resolves the given URL against the provided `baseUri'.\n *\n * @memberof Polymer.ResolveUrl\n * @param {string} url Input URL to resolve\n * @param {?string=} baseURI Base URI to resolve the URL against\n * @return {string} resolved URL\n */\nfunction resolveUrl(url, baseURI) {\n  if (url && ABS_URL.test(url)) {\n    return url;\n  }\n  // Lazy feature detection.\n  if (workingURL === undefined) {\n    workingURL = false;\n    try {\n      const u = new URL('b', 'http://a');\n      u.pathname = 'c%20d';\n      workingURL = (u.href === 'http://a/c%20d');\n    } catch (e) {\n      // silently fail\n    }\n  }\n  if (!baseURI) {\n    baseURI = document.baseURI || window.location.href;\n  }\n  if (workingURL) {\n    return (new URL(url, baseURI)).href;\n  }\n  // Fallback to creating an anchor into a disconnected document.\n  if (!resolveDoc) {\n    resolveDoc = document.implementation.createHTMLDocument('temp');\n    resolveDoc.base = resolveDoc.createElement('base');\n    resolveDoc.head.appendChild(resolveDoc.base);\n    resolveDoc.anchor = resolveDoc.createElement('a');\n    resolveDoc.body.appendChild(resolveDoc.anchor);\n  }\n  resolveDoc.base.href = baseURI;\n  resolveDoc.anchor.href = url;\n  return resolveDoc.anchor.href || url;\n\n}\n\n/**\n * Resolves any relative URL's in the given CSS text against the provided\n * `ownerDocument`'s `baseURI`.\n *\n * @memberof Polymer.ResolveUrl\n * @param {string} cssText CSS text to process\n * @param {string} baseURI Base URI to resolve the URL against\n * @return {string} Processed CSS text with resolved URL's\n */\nfunction resolveCss(cssText, baseURI) {\n  return cssText.replace(CSS_URL_RX, function(m, pre, url, post) {\n    return pre + '\\'' +\n      resolveUrl(url.replace(/[\"']/g, ''), baseURI) +\n      '\\'' + post;\n  });\n}\n\n/**\n * Returns a path from a given `url`. The path includes the trailing\n * `/` from the url.\n *\n * @memberof Polymer.ResolveUrl\n * @param {string} url Input URL to transform\n * @return {string} resolved path\n */\nfunction pathFromUrl(url) {\n  return url.substring(0, url.lastIndexOf('/') + 1);\n}\n\nexport { resolveCss };\nexport { resolveUrl };\nexport { pathFromUrl };\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@polymer/polymer/lib/utils/resolve-url.js","import isPlainObject from 'lodash-es/isPlainObject';\nimport $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nexport var ActionTypes = {\n  INIT: '@@redux/INIT'\n\n  /**\n   * Creates a Redux store that holds the state tree.\n   * The only way to change the data in the store is to call `dispatch()` on it.\n   *\n   * There should only be a single store in your app. To specify how different\n   * parts of the state tree respond to actions, you may combine several reducers\n   * into a single reducer function by using `combineReducers`.\n   *\n   * @param {Function} reducer A function that returns the next state tree, given\n   * the current state tree and the action to handle.\n   *\n   * @param {any} [preloadedState] The initial state. You may optionally specify it\n   * to hydrate the state from the server in universal apps, or to restore a\n   * previously serialized user session.\n   * If you use `combineReducers` to produce the root reducer function, this must be\n   * an object with the same shape as `combineReducers` keys.\n   *\n   * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n   * to enhance the store with third-party capabilities such as middleware,\n   * time travel, persistence, etc. The only store enhancer that ships with Redux\n   * is `applyMiddleware()`.\n   *\n   * @returns {Store} A Redux store that lets you read the state, dispatch actions\n   * and subscribe to changes.\n   */\n};export default function createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.INIT });\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object') {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n\n// WEBPACK FOOTER //\n// ../node_modules/redux/es/createStore.js","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/lodash-es/isPlainObject.js","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/lodash-es/_Symbol.js","/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nexport default function warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n}\n\n\n// WEBPACK FOOTER //\n// ../node_modules/redux/es/utils/warning.js","/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nexport default function compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(undefined, arguments));\n    };\n  });\n}\n\n\n// WEBPACK FOOTER //\n// ../node_modules/redux/es/compose.js","import { dedupingMixin } from '@polymer/polymer/lib/utils/mixin';\nimport * as caseMap$0 from '@polymer/polymer/lib/utils/case-map';\n// import { cssFromModuleImports, cssFromTemplate } from '@polymer/polymer/lib/utils/style-gather';\n// import { resolveUrl as resolveUrl$0 } from '@polymer/polymer/lib/utils/resolve-url';\nimport { render, html } from 'lit-html';\nimport { PropertyEffects } from './property-effects';\nconst { camelToDashCase } = caseMap$0;\n\nconst JSCompiler_renameProperty = (prop, obj) => { // eslint-disable-line camelcase\n  return prop;\n};\n\nexport const ElementMixin = dedupingMixin(base => {\n  /**\n   * @constructor\n   * @extends {base}\n   * @implements {Polymer_PropertyEffects}\n   */\n  const polymerElementBase = PropertyEffects(base);\n\n  let caseMap = caseMap$0;\n\n  /**\n   * Returns the `properties` object specifically on `klass`. Use for:\n   * (1) super chain mixes togther to make `propertiesForClass` which is\n   * then used to make `observedAttributes`.\n   * (2) properties effects and observers are created from it at `finalize` time.\n   *\n   * @param {HTMLElement} klass Element class\n   * @return {Object} Object containing own properties for this class\n   * @private\n   */\n  function ownPropertiesForClass (klass) {\n    if (!klass.hasOwnProperty(\n      JSCompiler_renameProperty('__ownProperties', klass))) {\n      klass.__ownProperties =\n        klass.hasOwnProperty(JSCompiler_renameProperty('properties', klass))\n          ? /** @type PolymerElementConstructor */ (klass).properties : {};\n    }\n    return klass.__ownProperties;\n  }\n\n  /**\n   * Returns the `observers` array specifically on `klass`. Use for\n   * setting up observers.\n   *\n   * @param {HTMLElement} klass Element class\n   * @return {Array} Array containing own observers for this class\n   * @private\n   */\n  function ownObserversForClass (klass) {\n    if (!klass.hasOwnProperty(\n      JSCompiler_renameProperty('__ownObservers', klass))) {\n      klass.__ownObservers =\n        klass.hasOwnProperty(JSCompiler_renameProperty('observers', klass))\n          ? /** @type PolymerElementConstructor */ (klass).observers : [];\n    }\n    return klass.__ownObservers;\n  }\n\n  /**\n   * Mixes `props` into `flattenedProps` but upgrades shorthand type\n   * syntax to { type: Type}.\n   *\n   * @param {Object} flattenedProps Bag to collect flattened properties into\n   * @param {Object} props Bag of properties to add to `flattenedProps`\n   * @return {Object} The input `flattenedProps` bag\n   * @private\n   */\n  function flattenProperties (flattenedProps, props) {\n    for (let p in props) {\n      let o = props[p];\n      if (typeof o === 'function') {\n        o = { type: o };\n      }\n      flattenedProps[p] = o;\n    }\n    return flattenedProps;\n  }\n\n  /**\n   * Returns a flattened list of properties mixed together from the chain of all\n   * constructor's `config.properties`. This list is used to create\n   * (1) observedAttributes,\n   * (2) class property default values\n   *\n   * @param {PolymerElementConstructor} klass Element class\n   * @return {PolymerElementProperties} Flattened properties for this class\n   * @suppress {missingProperties} class.prototype is not a property for some reason?\n   * @private\n   */\n  function propertiesForClass (klass) {\n    if (!klass.hasOwnProperty(\n      JSCompiler_renameProperty('__classProperties', klass))) {\n      klass.__classProperties =\n      flattenProperties({}, ownPropertiesForClass(klass));\n      let superCtor = Object.getPrototypeOf(klass.prototype).constructor;\n      if (superCtor.prototype instanceof PolymerElement) {\n        klass.__classProperties = Object.assign(\n          Object.create(propertiesForClass(/** @type PolymerElementConstructor */(superCtor))),\n          klass.__classProperties);\n      }\n    }\n    return klass.__classProperties;\n  }\n\n  /**\n   * Returns a list of properties with default values.\n   * This list is created as an optimization since it is a subset of\n   * the list returned from `propertiesForClass`.\n   * This list is used in `_initializeProperties` to set property defaults.\n   *\n   * @param {PolymerElementConstructor} klass Element class\n   * @return {PolymerElementProperties} Flattened properties for this class\n   *   that have default values\n   * @private\n   */\n  function propertyDefaultsForClass (klass) {\n    if (!klass.hasOwnProperty(\n      JSCompiler_renameProperty('__classPropertyDefaults', klass))) {\n      klass.__classPropertyDefaults = null;\n      let props = propertiesForClass(klass);\n      for (let p in props) {\n        let info = props[p];\n        if ('value' in info) {\n          klass.__classPropertyDefaults = klass.__classPropertyDefaults || {};\n          klass.__classPropertyDefaults[p] = info;\n        }\n      }\n    }\n    return klass.__classPropertyDefaults;\n  }\n\n  /**\n   * Returns true if a `klass` has finalized. Called in `ElementClass.finalize()`\n   * @param {PolymerElementConstructor} klass Element class\n   * @return {boolean} True if all metaprogramming for this class has been\n   *   completed\n   * @private\n   */\n  function hasClassFinalized (klass) {\n    return klass.hasOwnProperty(JSCompiler_renameProperty('__finalized', klass));\n  }\n\n  /**\n   * Called by `ElementClass.finalize()`. Ensures this `klass` and\n   * *all superclasses* are finalized by traversing the prototype chain\n   * and calling `klass.finalize()`.\n   *\n   * @param {PolymerElementConstructor} klass Element class\n   * @private\n   */\n  function finalizeClassAndSuper (klass) {\n    let proto = /** @type PolymerElementConstructor */ (klass).prototype;\n    let superCtor = Object.getPrototypeOf(proto).constructor;\n    if (superCtor.prototype instanceof PolymerElement) {\n      superCtor.finalize();\n    }\n    finalizeClass(klass);\n  }\n\n  /**\n   * Configures a `klass` based on a staic `klass.config` object and\n   * a `template`. This includes creating accessors and effects\n   * for properties in `config` and the `template` as well as preparing the\n   * `template` for stamping.\n   *\n   * @param {PolymerElementConstructor} klass Element class\n   * @private\n   */\n  function finalizeClass (klass) {\n    klass.__finalized = true;\n    let proto = /** @type PolymerElementConstructor */ (klass).prototype;\n    if (klass.hasOwnProperty(\n      JSCompiler_renameProperty('is', klass)) && klass.is) {\n      register(proto);\n    }\n    let props = ownPropertiesForClass(klass);\n    if (props) {\n      finalizeProperties(proto, props);\n    }\n    let observers = ownObserversForClass(klass);\n    if (observers) {\n      finalizeObservers(proto, observers, props);\n    }\n    // note: create \"working\" template that is finalized at instance time\n    // let template = /** @type PolymerElementConstructor */ (klass).template;\n    // if (template) {\n    //   if (typeof template === 'string') {\n    //     let t = document.createElement('template');\n    //     t.innerHTML = template;\n    //     template = t;\n    //   } else {\n    //     template = template.cloneNode(true);\n    //   }\n    //   proto._template = template;\n    // }\n  }\n\n  /**\n   * Configures a `proto` based on a `properties` object.\n   * Leverages `PropertyEffects` to create property accessors and effects\n   * supporting, observers, reflecting to attributes, change notification,\n   * computed properties, and read only properties.\n   * @param {PolymerElement} proto Element class prototype to add accessors\n   *    and effects to\n   * @param {Object} properties Flattened bag of property descriptors for\n   *    this class\n   * @private\n   */\n  function finalizeProperties (proto, properties) {\n    for (let p in properties) {\n      createPropertyFromConfig(proto, p, properties[p], properties);\n    }\n  }\n\n  /**\n   * Configures a `proto` based on a `observers` array.\n   * Leverages `PropertyEffects` to create observers.\n   * @param {PolymerElement} proto Element class prototype to add accessors\n   *   and effects to\n   * @param {Object} observers Flattened array of observer descriptors for\n   *   this class\n   * @param {Object} dynamicFns Object containing keys for any properties\n   *   that are functions and should trigger the effect when the function\n   *   reference is changed\n   * @private\n   */\n  function finalizeObservers (proto, observers, dynamicFns) {\n    for (let i = 0; i < observers.length; i++) {\n      proto._createMethodObserver(observers[i], dynamicFns);\n    }\n  }\n\n  /**\n   * Creates effects for a property.\n   *\n   * Note, once a property has been set to\n   * `readOnly`, `computed`, `reflectToAttribute`, or `notify`\n   * these values may not be changed. For example, a subclass cannot\n   * alter these settings. However, additional `observers` may be added\n   * by subclasses.\n   *\n   * The info object should may contain property metadata as follows:\n   *\n   * * `type`: {function} type to which an attribute matching the property\n   * is deserialized. Note the property is camel-cased from a dash-cased\n   * attribute. For example, 'foo-bar' attribute is dersialized to a\n   * property named 'fooBar'.\n   *\n   * * `readOnly`: {boolean} creates a readOnly property and\n   * makes a private setter for the private of the form '_setFoo' for a\n   * property 'foo',\n   *\n   * * `computed`: {string} creates a computed property. A computed property\n   * also automatically is set to `readOnly: true`. The value is calculated\n   * by running a method and arguments parsed from the given string. For\n   * example 'compute(foo)' will compute a given property when the\n   * 'foo' property changes by executing the 'compute' method. This method\n   * must return the computed value.\n   *\n   * * `reflectToAttriute`: {boolean} If true, the property value is reflected\n   * to an attribute of the same name. Note, the attribute is dash-cased\n   * so a property named 'fooBar' is reflected as 'foo-bar'.\n   *\n   * * `notify`: {boolean} sends a non-bubbling notification event when\n   * the property changes. For example, a property named 'foo' sends an\n   * event named 'foo-changed' with `event.detail` set to the value of\n   * the property.\n   *\n   * * observer: {string} name of a method that runs when the property\n   * changes. The arguments of the method are (value, previousValue).\n   *\n   * Note: Users may want control over modifying property\n   * effects via subclassing. For example, a user might want to make a\n   * reflectToAttribute property not do so in a subclass. We've chosen to\n   * disable this because it leads to additional complication.\n   * For example, a readOnly effect generates a special setter. If a subclass\n   * disables the effect, the setter would fail unexpectedly.\n   * Based on feedback, we may want to try to make effects more malleable\n   * and/or provide an advanced api for manipulating them.\n   * Also consider adding warnings when an effect cannot be changed.\n   *\n   * @param {PolymerElement} proto Element class prototype to add accessors\n   *   and effects to\n   * @param {string} name Name of the property.\n   * @param {Object} info Info object from which to create property effects.\n   * Supported keys:\n   * @param {Object} allProps Flattened map of all properties defined in this\n   *   element (including inherited properties)\n   * @private\n   */\n  function createPropertyFromConfig (proto, name, info, allProps) {\n    // computed forces readOnly...\n    if (info.computed) {\n      info.readOnly = true;\n    }\n    // Note, since all computed properties are readOnly, this prevents\n    // adding additional computed property effects (which leads to a confusing\n    // setup where multiple triggers for setting a property)\n    // While we do have `hasComputedEffect` this is set on the property's\n    // dependencies rather than itself.\n    if (info.computed && !proto._hasReadOnlyEffect(name)) {\n      proto._createComputedProperty(name, info.computed, allProps);\n    }\n    if (info.readOnly && !proto._hasReadOnlyEffect(name)) {\n      proto._createReadOnlyProperty(name, !info.computed);\n    }\n    if (info.reflectToAttribute && !proto._hasReflectEffect(name)) {\n      proto._createReflectedProperty(name);\n    }\n    if (info.notify && !proto._hasNotifyEffect(name)) {\n      proto._createNotifyingProperty(name);\n    }\n    // always add observer\n    if (info.observer) {\n      proto._createPropertyObserver(name, info.observer, allProps[info.observer]);\n    }\n  }\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @unrestricted\n   * @implements {Polymer_ElementMixin}\n   */\n  class PolymerElement extends polymerElementBase {\n    /**\n     * Standard Custom Elements V1 API.  The default implementation returns\n     * a list of dash-cased attributes based on a flattening of all properties\n     * declared in `static get properties()` for this element and any\n     * superclasses.\n     *\n     * @return {Array} Observed attribute list\n     */\n    static get observedAttributes () {\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('__observedAttributes', this))) {\n        let list = [];\n        let properties = propertiesForClass(this);\n        for (let prop in properties) {\n          list.push(camelToDashCase(prop));\n        }\n        this.__observedAttributes = list;\n      }\n      return this.__observedAttributes;\n    }\n\n    /**\n     * Called automatically when the first element instance is created to\n     * ensure that class finalization work has been completed.\n     * May be called by users to eagerly perform class finalization work\n     * prior to the creation of the first element instance.\n     *\n     * Class finalization work generally includes meta-programming such as\n     * creating property accessors and any property effect metadata needed for\n     * the features used.\n     *\n     * @public\n     */\n    static finalize () {\n      if (!hasClassFinalized(this)) {\n        finalizeClassAndSuper(this);\n      }\n    }\n\n    /**\n     * Overrides the default `Polymer.PropertyAccessors` to ensure class\n     * metaprogramming related to property accessors and effects has\n     * completed (calls `finalize`).\n     *\n     * It also initializes any property defaults provided via `value` in\n     * `properties` metadata.\n     *\n     * @override\n     * @suppress {invalidCasts}\n     */\n    _initializeProperties () {\n      instanceCount++;\n      this.constructor.finalize();\n      // // note: finalize template when we have access to `localName` to\n      // // avoid dependence on `is` for polyfilling styling.\n      // if (this._template && !this._template.__polymerFinalized) {\n      //   this._template.__polymerFinalized = true;\n      //   const baseURI =\n      //     importPath ? resolveUrl$0(importPath) : '';\n      //   finalizeTemplate(/** @type {!PolymerElement} */(this.__proto__), this._template, baseURI,\n      //     /** @type {!HTMLElement} */(this).localName);\n      // }\n      super._initializeProperties();\n      // apply property defaults...\n      let p$ = propertyDefaultsForClass(this.constructor);\n      if (!p$) {\n        return;\n      }\n      for (let p in p$) {\n        let info = p$[p];\n        // Don't set default value if there is already an own property, which\n        // happens when a `properties` property with default but no effects had\n        // a property set (e.g. bound) by its host before upgrade\n        if (!this.hasOwnProperty(p)) {\n          let value = typeof info.value === 'function'\n            ? info.value.call(this)\n            : info.value;\n          // Set via `_setProperty` if there is an accessor, to enable\n          // initializing readOnly property defaults\n          if (this._hasAccessor(p)) {\n            this._setPendingProperty(p, value, true);\n          } else {\n            this[p] = value;\n          }\n        }\n      }\n    }\n\n    /**\n     * Provides a default implementation of the standard Custom Elements\n     * `connectedCallback`.\n     *\n     * The default implementation enables the property effects system and\n     * flushes any pending properties, and updates shimmed CSS properties\n     * when using the ShadyCSS scoping/custom properties polyfill.\n     *\n     * @suppress {invalidCasts}\n     */\n    connectedCallback () {\n      if (window.ShadyCSS) {\n        var template = document.createElement('template');\n        render(this.template(), template.content);\n        window.ShadyCSS.prepareTemplate(template, this.constructor.is);\n        window.ShadyCSS.styleElement(/** @type {!HTMLElement} */(this));\n      }\n\n      this._enableProperties();\n    }\n\n    /**\n     * Provides a default implementation of the standard Custom Elements\n     * `disconnectedCallback`.\n     */\n    disconnectedCallback () {}\n\n    ready () {\n      var props = propertiesForClass(this.constructor);\n      for (var i in props) {\n        this._createPropertyAccessor(i, props[i].readOnly);\n      }\n      super.ready();\n    }\n\n    /**\n     * Implements `PropertyEffects`'s `_readyClients` call. Attaches\n     * element dom by calling `_attachDom` with the dom stamped from the\n     * element's template via `_stampTemplate`. Note that this allows\n     * client dom to be attached to the element prior to any observers\n     * running.\n     *\n     * @override\n     */\n    _readyClients () {\n      this._attachDom();\n\n      // The super._readyClients here sets the clients initialized flag.\n      // We must wait to do this until after client dom is created/attached\n      // so that this flag can be checked to prevent notifications fired\n      // during this process from being handled before clients are ready.\n      super._readyClients();\n    }\n\n    /**\n     * Attaches an element's stamped dom to itself. By default,\n     * this method creates a `shadowRoot` and adds the dom to it.\n     * However, this method may be overridden to allow an element\n     * to put its dom in another location.\n     *\n     * @throws {Error}\n     * @suppress {missingReturn}\n     * @param {StampedTemplate} dom to attach to the element.\n     * @return {ShadowRoot} node to which the dom has been attached.\n     */\n    _attachDom () {\n      if (this.attachShadow) {\n        if (!this.shadowRoot) {\n          this.attachShadow({mode: 'open'});\n        }\n        this.render();\n      } else {\n        throw new Error('ShadowDOM not available. ' +\n          // TODO(sorvell): move to compile-time conditional when supported\n        'Polymer.Element can create dom as children instead of in ' +\n        'ShadowDOM by setting `this.root = this;` before `ready`.');\n      }\n    }\n\n    /**\n     * Provides a default implementation of the standard Custom Elements\n     * `attributeChangedCallback`.\n     *\n     * By default, attributes declared in `properties` metadata are\n     * deserialized using their `type` information to properties of the\n     * same name.  \"Dash-cased\" attributes are deserialzed to \"camelCase\"\n     * properties.\n     *\n     * @param {string} name Name of attribute.\n     * @param {?string} old Old value of attribute.\n     * @param {?string} value Current value of attribute.\n     * @override\n     */\n    attributeChangedCallback (name, old, value) {\n      if (old !== value) {\n        let property = caseMap.dashToCamelCase(name);\n        let type = propertiesForClass(this.constructor)[property].type;\n        if (!this._hasReadOnlyEffect(property)) {\n          this._attributeToProperty(name, value, type);\n        }\n      }\n    }\n\n    /**\n     * When using the ShadyCSS scoping and custom property shim, causes all\n     * shimmed styles in this element (and its subtree) to be updated\n     * based on current custom property values.\n     *\n     * The optional parameter overrides inline custom property styles with an\n     * object of properties where the keys are CSS properties, and the values\n     * are strings.\n     *\n     * Example: `this.updateStyles({'--color': 'blue'})`\n     *\n     * These properties are retained unless a value of `null` is set.\n     *\n     * @param {Object=} properties Bag of custom property key/values to\n     *   apply to this element.\n     * @suppress {invalidCasts}\n     */\n    updateStyles (properties) {\n      if (window.ShadyCSS) {\n        window.ShadyCSS.styleSubtree(/** @type {!HTMLElement} */(this), properties);\n      }\n    }\n\n    render () {\n      render(this.template(this), this.shadowRoot);\n    }\n\n    template () {\n      return html``;\n    }\n  }\n\n  return PolymerElement;\n});\n\nexport let instanceCount = 0;\nexport const registrations = [];\n\nexport function _regLog (prototype) {\n  console.log('[' + prototype.is + ']: registered');\n}\n\nexport function register (prototype) {\n  registrations.push(prototype);\n  undefined && _regLog(prototype);\n}\n\nexport function dumpRegistrations () {\n  registrations.forEach(_regLog);\n}\n\nexport const updateStyles = (props) => {\n  if (window.ShadyCSS) {\n    window.ShadyCSS.styleDocument(props);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ../src/core/mixins/element-mixin.js","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/css-loader/lib/css-base.js","import './src/core/components/main-router';\n\n\n\n// WEBPACK FOOTER //\n// ../index.js","import { ElementMixin } from '../../mixins/element-mixin';\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer';\nimport LocationMixin from '../../mixins/location-mixin';\nimport QueryParamsMixin from '../../mixins/query-params-mixin';\nimport pathToRegexp from 'path-to-regexp';\nimport fragments from '../../fragments';\nimport auth from '../../../authentication';\nimport template from './template';\nimport { reducers, store, ReduxMixin } from '../state-manager';\nimport { combineReducers } from 'redux';\n\nconst ROUTER_ACTION = {\n  PARAMS: 'ROUTER_UPDATE_PARAMS',\n  ROUTE: 'ROUTER_UPDATE_ROUTE'\n};\n\nreducers.router = (router = {}, action) => {\n  switch (action.type) {\n    case ROUTER_ACTION.PARAMS:\n      return Object.assign({}, router, {\n        params: action.params\n      });\n    case ROUTER_ACTION.ROUTE:\n      return Object.assign({}, router, {\n        route: action.route\n      });\n    default:\n      return router;\n  }\n};\n\nstore.replaceReducer(combineReducers(reducers));\n\nexport { ROUTER_ACTION };\n\nclass MainRouter extends ReduxMixin(QueryParamsMixin(LocationMixin(ElementMixin(window.HTMLElement)))) {\n  static get is () { return 'main-router'; }\n\n  static get properties () {\n    return {\n      params: {\n        type: Object,\n        statePath: 'router.params'\n      },\n\n      currentRoute: {\n        type: String,\n        statePath: 'router.route'\n      }\n    };\n  }\n\n  static get observers () {\n    return [\n      '_checkAuth(currentRoute)',\n      '_updateUrl(path, query, hash)'\n    ];\n  }\n\n  constructor () {\n    super();\n    this._routes = {};\n    this.state = {};\n  }\n\n  connectedCallback () {\n    super.connectedCallback();\n    this._observer = new FlattenedNodesObserver(this, (info) => {\n      this._contentAdded(info.addedNodes.filter((node) => (node.nodeType === window.Node.ELEMENT_NODE)));\n    });\n    // import(/* webpackChunkName: \"app-toast\" */ '../modules/app-toast/components/app-toast.html').then(() => {\n    //   var messageInterval = setInterval(() => {\n    //     if (messages.length > 0) {\n    //       var {message, optTapHandler, optAction, optActionHandler, optDuration} = messages.pop()\n    //       this.showMessage(message, optTapHandler, optAction, optActionHandler, optDuration)\n    //     } else {\n    //       clearInterval(messageInterval)\n    //       messageInterval = null\n    //     }\n    //   }, 5000)\n    // })\n  }\n\n  disconnectedCallback () {\n    if (super.disconnectedCallback) {\n      super.disconnectedCallback();\n    }\n    if (this._observer) this._observer.disconnect();\n    if (this._listener) this._listener();\n  }\n\n  template () {\n    return template(this);\n  }\n\n  showMessage (message, optTapHandler, optAction, optActionHandler, optDuration) {\n    // if (this.shadowRoot.querySelector('app-toast').showMessage) {\n    //   this.shadowRoot.querySelector('app-toast').showMessage(message, optTapHandler, optAction, optActionHandler, optDuration)\n    // } else {\n    //   messages.push({message, optTapHandler, optAction, optActionHandler, optDuration})\n    // }\n  }\n\n  // closeToast () {\n  //   this.shadowRoot.querySelector('app-toast').close();\n  // }\n\n  _contentAdded (pages) {\n    pages.forEach(page => {\n      page.classList.add('page');\n      this._routes[page.getAttribute('route')] = {\n        element: page,\n        auth: page.getAttribute('auth')\n      };\n    });\n    this._pathChanged(this.path);\n  }\n\n  _pathChanged (path) {\n    // load statistics if it went through here\n    if (path === '/_statistic.html' || path === '/_bundle-sizes.html') {\n      window.location.href = path;\n      return;\n    }\n\n    path = path.replace(/index\\.html$/, '');\n\n    var routeName = null;\n    Object.entries(this._routes).forEach(route => {\n      if (routeName) return;\n      var params = {};\n      const keys = [];\n      const re = pathToRegexp(route[0], keys);\n      const exec = re.exec(path);\n\n      if (exec) {\n        params = {};\n        for (var j = 0; j < keys.length; j++) {\n          params[keys[j].name] = exec[j + 1];\n        }\n        routeName = route[0];\n        // this.params = params;\n\n        this.dispatch({\n          type: ROUTER_ACTION.PARAMS,\n          params\n        });\n      }\n    });\n\n    this.dispatch({\n      type: ROUTER_ACTION.ROUTE,\n      route: routeName || 'not-found'\n    });\n\n    // this._checkAuth(routeName || 'not-found');\n  }\n\n  _checkAuth (route) {\n    if (this._routes[route] && this._routes[route].auth && auth[this._routes[route].auth]) {\n      if (auth[this._routes[route].auth] instanceof Promise) {\n        auth[this._routes[route].auth]()\n          .then((res) => {\n            if (res) {\n              this._loadPage(route);\n            } else {\n              this._loadPage('not-authorized');\n            }\n          })\n          .catch((e) => {\n            console.log(e);\n            this._loadPage('not-authorized');\n          });\n      } else if (typeof auth[this._routes[route].auth] === 'function' && auth[this._routes[route].auth](this)) {\n        this._loadPage(route);\n      } else {\n        this._loadPage('not-authorized');\n      }\n    } else {\n      this._loadPage(route);\n    }\n  }\n\n  _loadPage (route) {\n    const routes = Object.assign({}, fragments);\n    for (var i in this._routes) {\n      if (this._routes[i] && this._routes[i].element) this._routes[i].element.classList.remove('page--on-view');\n    }\n\n    if (this._routes[route] && this._routes[route].element) {\n      this._routes[route].element.classList.add('page--on-view');\n    }\n    if (this._routes[route]) {\n      // console.log(this._routes[route])\n      var name = this._routes[route].element.nodeName.toLowerCase();\n\n      if (!routes[name]) {\n        return this.dispatch({\n          type: ROUTER_ACTION.ROUTE,\n          route: 'not-found'\n        });\n      }\n\n      routes[name]().then(() => {\n        // if (this._routes[route].element._setProperty) {\n        //   this._routes[route].element._setProperty('params', this.params);\n        //   this._routes[route].element._setProperty('queryParams', this.paramsObject);\n        // }\n\n        if (!this._routes[route].element.constructor.is ||\n          this._routes[route].element.constructor === this._routes[route].element.nodeName.toLowerCase()) {\n          return this.dispatch({\n            type: ROUTER_ACTION.ROUTE,\n            route: 'not-found'\n          });\n        }\n\n        if (this._routes[route].element.reload) {\n          this._routes[route].element.reload();\n        }\n\n        if (document.querySelector('.header') && document.querySelector('.header').reload) {\n          document.querySelector('.header').reload();\n        }\n\n        if (document.querySelector('.drawer') && document.querySelector('.drawer').reload) {\n          document.querySelector('.drawer').reload();\n        }\n\n        window.scrollTo(0, 0);\n        if (window.ga) {\n          window.ga('set', 'page', this.path);\n          window.ga('send', 'pageview');\n        }\n      });\n    }\n  }\n}\n\nwindow.customElements.define(MainRouter.is, MainRouter);\n\n\n\n// WEBPACK FOOTER //\n// ../src/core/components/main-router/index.js","import {PropertyAccessors} from '@polymer/polymer/lib/mixins/property-accessors';\nimport {dedupingMixin} from '@polymer/polymer/lib/utils/mixin';\nimport { root as root$0, get as get$0, isPath as isPath$0, set as set$0, normalize } from '@polymer/polymer/lib/utils/path';\nimport * as caseMap from '@polymer/polymer/lib/utils/case-map';\nimport TemplateStamp from './template-stamp';\nimport TYPES from '../utils/property-effects-types';\nimport hostStack from '../utils/host-stack';\nimport { runComputedEffect, runReflectEffect, ensureOwnEffectMap, computeLinkedPaths, runComputedEffects, runEffects, runNotifyEffects, runObserverEffect, parseMethod, createMethodEffect, runMethodEffect, runNotifyEffect } from '../utils/effects';\nimport { notifySplices, notifySplice, upper } from '../utils/data-api';\n\n/** @const {Object} */\nconst CaseMap = caseMap;\nlet PropertyEffectsType; // eslint-disable-line no-unused-vars\n\nexport const PropertyEffects = dedupingMixin(superClass => {\n  const propertyEffectsBase = TemplateStamp(PropertyAccessors(superClass));\n\n  // /** @class {!HTMLElement} */\n  class PropertyEffects extends propertyEffectsBase {\n    constructor () {\n      super();\n      /** @type {boolean} */\n      this.__dataClientsReady; // eslint-disable-line no-unused-expressions\n      /** @type {Array} */\n      this.__dataPendingClients; // eslint-disable-line no-unused-expressions\n      /** @type {Object} */\n      this.__dataToNotify; // eslint-disable-line no-unused-expressions\n      /** @type {Object} */\n      this.__dataLinkedPaths; // eslint-disable-line no-unused-expressions\n      /** @type {boolean} */\n      this.__dataHasPaths; // eslint-disable-line no-unused-expressions\n      /** @type {Object} */\n      this.__dataCompoundStorage; // eslint-disable-line no-unused-expressions\n      /** @type {Polymer_PropertyEffects} */\n      this.__dataHost; // eslint-disable-line no-unused-expressions\n      /** @type {!Object} */\n      this.__dataTemp; // eslint-disable-line no-unused-expressions\n      /** @type {boolean} */\n      this.__dataClientsInitialized; // eslint-disable-line no-unused-expressions\n      /** @type {!Object} */\n      this.__data; // eslint-disable-line no-unused-expressions\n      /** @type {!Object} */\n      this.__dataPending; // eslint-disable-line no-unused-expressions\n      /** @type {!Object} */\n      this.__dataOld; // eslint-disable-line no-unused-expressions\n      /** @type {Object} */\n      this.__computeEffects; // eslint-disable-line no-unused-expressions\n      /** @type {Object} */\n      this.__reflectEffects; // eslint-disable-line no-unused-expressions\n      /** @type {Object} */\n      this.__notifyEffects; // eslint-disable-line no-unused-expressions\n      /** @type {Object} */\n      this.__propagateEffects; // eslint-disable-line no-unused-expressions\n      /** @type {Object} */\n      this.__observeEffects; // eslint-disable-line no-unused-expressions\n      /** @type {Object} */\n      this.__readOnly; // eslint-disable-line no-unused-expressions\n      /** @type {number} */\n      this.__dataCounter; // eslint-disable-line no-unused-expressions\n    }\n\n    get PROPERTY_EFFECT_TYPES () {\n      return TYPES;\n    }\n\n    _initializeProperties () {\n      super._initializeProperties();\n      hostStack.registerHost(this);\n      this.__dataClientsReady = false;\n      this.__dataPendingClients = null;\n      this.__dataToNotify = null;\n      this.__dataLinkedPaths = null;\n      this.__dataHasPaths = false;\n      // May be set on instance prior to upgrade\n      this.__dataCompoundStorage = this.__dataCompoundStorage || null;\n      this.__dataHost = this.__dataHost || null;\n      this.__dataTemp = {};\n      this.__dataClientsInitialized = false;\n    }\n\n    /**\n     * Overrides `Polymer.PropertyAccessors` implementation to provide a\n     * more efficient implementation of initializing properties from\n     * the prototype on the instance.\n     *\n     * @override\n     * @param {Object} props Properties to initialize on the prototype\n     */\n    _initializeProtoProperties (props) {\n      this.__data = Object.create(props);\n      this.__dataPending = Object.create(props);\n      this.__dataOld = {};\n    }\n\n    /**\n     * Overrides `Polymer.PropertyAccessors` implementation to avoid setting\n     * `_setProperty`'s `shouldNotify: true`.\n     *\n     * @override\n     * @param {Object} props Properties to initialize on the instance\n     */\n    _initializeInstanceProperties (props) {\n      let readOnly = this[TYPES.READ_ONLY];\n      for (let prop in props) {\n        if (!readOnly || !readOnly[prop]) {\n          this.__dataPending = this.__dataPending || {};\n          this.__dataOld = this.__dataOld || {};\n          this.__data[prop] = this.__dataPending[prop] = props[prop];\n        }\n      }\n    }\n\n    // Prototype setup ----------------------------------------\n\n    /**\n     * Equivalent to static `addPropertyEffect` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} property Property that should trigger the effect\n     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @param {Object=} effect Effect metadata object\n     * @protected\n     */\n    _addPropertyEffect (property, type, effect) {\n      this._createPropertyAccessor(property, type === TYPES.READ_ONLY);\n      // effects are accumulated into arrays per property based on type\n      let effects = ensureOwnEffectMap(this, type)[property];\n      if (!effects) {\n        effects = this[type][property] = [];\n      }\n      effects.push(effect);\n    }\n\n    /**\n     * Removes the given property effect.\n     *\n     * @param {string} property Property the effect was associated with\n     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @param {Object=} effect Effect metadata object to remove\n     */\n    _removePropertyEffect (property, type, effect) {\n      let effects = ensureOwnEffectMap(this, type)[property];\n      let idx = effects.indexOf(effect);\n      if (idx >= 0) {\n        effects.splice(idx, 1);\n      }\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a property effect\n     * of a certain type.\n     *\n     * @param {string} property Property name\n     * @param {string=} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @return {boolean} True if the prototype/instance has an effect of this type\n     * @protected\n     */\n    _hasPropertyEffect (property, type) {\n      let effects = this[type];\n      return Boolean(effects && effects[property]);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"read only\"\n     * accessor for the given property.\n     *\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this type\n     * @protected\n     */\n    _hasReadOnlyEffect (property) {\n      return this._hasPropertyEffect(property, TYPES.READ_ONLY);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"notify\"\n     * property effect for the given property.\n     *\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this type\n     * @protected\n     */\n    _hasNotifyEffect (property) {\n      return this._hasPropertyEffect(property, TYPES.NOTIFY);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"reflect to attribute\"\n     * property effect for the given property.\n     *\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this type\n     * @protected\n     */\n    _hasReflectEffect (property) {\n      return this._hasPropertyEffect(property, TYPES.REFLECT);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"computed\"\n     * property effect for the given property.\n     *\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this type\n     * @protected\n     */\n    _hasComputedEffect (property) {\n      return this._hasPropertyEffect(property, TYPES.COMPUTE);\n    }\n\n    // Runtime ----------------------------------------\n\n    /**\n     * Sets a pending property or path.  If the root property of the path in\n     * question had no accessor, the path is set, otherwise it is enqueued\n     * via `_setPendingProperty`.\n     *\n     * This function isolates relatively expensive functionality necessary\n     * for the public API (`set`, `setProperties`, `notifyPath`, and property\n     * change listeners via {{...}} bindings), such that it is only done\n     * when paths enter the system, and not at every propagation step.  It\n     * also sets a `__dataHasPaths` flag on the instance which is used to\n     * fast-path slower path-matching code in the property effects host paths.\n     *\n     * `path` can be a path string or array of path parts as accepted by the\n     * public API.\n     *\n     * @param {string | !Array<number|string>} path Path to set\n     * @param {*} value Value to set\n     * @param {boolean=} shouldNotify Set to true if this change should\n     *  cause a property notification event dispatch\n     * @param {boolean=} isPathNotification If the path being set is a path\n     *   notification of an already changed value, as opposed to a request\n     *   to set and notify the change.  In the latter `false` case, a dirty\n     *   check is performed and then the value is set to the path before\n     *   enqueuing the pending property change.\n     * @return {boolean} Returns true if the property/path was enqueued in\n     *   the pending changes bag.\n     * @protected\n     */\n    _setPendingPropertyOrPath (path, value, shouldNotify, isPathNotification) {\n      if (isPathNotification ||\n          root$0(Array.isArray(path) ? path[0] : path) !== path) {\n        // Dirty check changes being set to a path against the actual object,\n        // since this is the entry point for paths into the system; from here\n        // the only dirty checks are against the `__dataTemp` cache to prevent\n        // duplicate work in the same turn only. Note, if this was a notification\n        // of a change already set to a path (isPathNotification: true),\n        // we always let the change through and skip the `set` since it was\n        // already dirty checked at the point of entry and the underlying\n        // object has already been updated\n        if (!isPathNotification) {\n          let old = get$0(this, path);\n          path = /** @type {string} */ (set$0(this, path, value));\n          // Use property-accessor's simpler dirty check\n          if (!path || !super._shouldPropertyChange(path, value, old)) {\n            return false;\n          }\n        }\n        this.__dataHasPaths = true;\n        if (this._setPendingProperty(/** @type{string} */(path), value, shouldNotify)) {\n          computeLinkedPaths(this, path, value);\n          return true;\n        }\n      } else {\n        if (this.__dataHasAccessor && this.__dataHasAccessor[path]) {\n          return this._setPendingProperty(/** @type{string} */(path), value, shouldNotify);\n        } else {\n          this[path] = value;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * Applies a value to a non-Polymer element/node's property.\n     *\n     * The implementation makes a best-effort at binding interop:\n     * Some native element properties have side-effects when\n     * re-setting the same value (e.g. setting `<input>.value` resets the\n     * cursor position), so we do a dirty-check before setting the value.\n     * However, for better interop with non-Polymer custom elements that\n     * accept objects, we explicitly re-set object changes coming from the\n     * Polymer world (which may include deep object changes without the\n     * top reference changing), erring on the side of providing more\n     * information.\n     *\n     * Users may override this method to provide alternate approaches.\n     *\n     * @param {Node} node The node to set a property on\n     * @param {string} prop The property to set\n     * @param {*} value The value to set\n     * @protected\n     */\n    _setUnmanagedPropertyToNode (node, prop, value) {\n      // It is a judgment call that resetting primitives is\n      // \"bad\" and resettings objects is also \"good\"; alternatively we could\n      // implement a whitelist of tag & property values that should never\n      // be reset (e.g. <input>.value && <select>.value)\n      if (value !== node[prop] || typeof value === 'object') {\n        node[prop] = value;\n      }\n    }\n\n    /**\n     * Overrides the `PropertyAccessors` implementation to introduce special\n     * dirty check logic depending on the property & value being set:\n     *\n     * 1. Any value set to a path (e.g. 'obj.prop': 42 or 'obj.prop': {...})\n     *    Stored in `__dataTemp`, dirty checked against `__dataTemp`\n     * 2. Object set to simple property (e.g. 'prop': {...})\n     *    Stored in `__dataTemp` and `__data`, dirty checked against\n     *    `__dataTemp` by default implementation of `_shouldPropertyChange`\n     * 3. Primitive value set to simple property (e.g. 'prop': 42)\n     *    Stored in `__data`, dirty checked against `__data`\n     *\n     * The dirty-check is important to prevent cycles due to two-way\n     * notification, but paths and objects are only dirty checked against any\n     * previous value set during this turn via a \"temporary cache\" that is\n     * cleared when the last `_propertiesChaged` exits. This is so:\n     * a. any cached array paths (e.g. 'array.3.prop') may be invalidated\n     *    due to array mutations like shift/unshift/splice; this is fine\n     *    since path changes are dirty-checked at user entry points like `set`\n     * b. dirty-checking for objects only lasts one turn to allow the user\n     *    to mutate the object in-place and re-set it with the same identity\n     *    and have all sub-properties re-propagated in a subsequent turn.\n     *\n     * The temp cache is not necessarily sufficient to prevent invalid array\n     * paths, since a splice can happen during the same turn (with pathological\n     * user code); we could introduce a \"fixup\" for temporarily cached array\n     * paths if needed: https://github.com/Polymer/polymer/issues/4227\n     *\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @param {boolean=} shouldNotify True if property should fire notification\n     *   event (applies only for `notify: true` properties)\n     * @return {boolean} Returns true if the property changed\n     * @override\n     */\n    _setPendingProperty (property, value, shouldNotify) {\n      let isPath = this.__dataHasPaths && isPath$0(property);\n      let prevProps = isPath ? this.__dataTemp : this.__data;\n      if (this._shouldPropertyChange(property, value, prevProps[property])) {\n        if (!this.__dataPending) {\n          this.__dataPending = {};\n          this.__dataOld = {};\n        }\n        // Ensure old is captured from the last turn\n        if (!(property in this.__dataOld)) {\n          this.__dataOld[property] = this.__data[property];\n        }\n        // Paths are stored in temporary cache (cleared at end of turn),\n        // which is used for dirty-checking, all others stored in __data\n        if (isPath) {\n          this.__dataTemp[property] = value;\n        } else {\n          this.__data[property] = value;\n        }\n        // All changes go into pending property bag, passed to _propertiesChanged\n        this.__dataPending[property] = value;\n        // Track properties that should notify separately\n        if (isPath || (this[TYPES.NOTIFY] && this[TYPES.NOTIFY][property])) {\n          this.__dataToNotify = this.__dataToNotify || {};\n          this.__dataToNotify[property] = shouldNotify;\n        }\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Overrides base implementation to ensure all accessors set `shouldNotify`\n     * to true, for per-property notification tracking.\n     *\n     * @override\n     */\n    _setProperty (property, value) {\n      if (this._setPendingProperty(property, value, true)) {\n        this._invalidateProperties();\n      }\n    }\n\n    /**\n     * Overrides `PropertyAccessor`'s default async queuing of\n     * `_propertiesChanged`: if `__dataReady` is false (has not yet been\n     * manually flushed), the function no-ops; otherwise flushes\n     * `_propertiesChanged` synchronously.\n     *\n     * @override\n     */\n    _invalidateProperties () {\n      if (this.__dataReady) {\n        this._flushProperties();\n      }\n    }\n\n    /**\n     * Enqueues the given client on a list of pending clients, whose\n     * pending property changes can later be flushed via a call to\n     * `_flushClients`.\n     *\n     * @param {Object} client PropertyEffects client to enqueue\n     * @protected\n     */\n    _enqueueClient (client) {\n      this.__dataPendingClients = this.__dataPendingClients || [];\n      if (client !== this) {\n        this.__dataPendingClients.push(client);\n      }\n    }\n\n    /**\n     * Flushes any clients previously enqueued via `_enqueueClient`, causing\n     * their `_flushProperties` method to run.\n     *\n     * @protected\n     */\n    _flushClients () {\n      if (!this.__dataClientsReady) {\n        this.__dataClientsReady = true;\n        this._readyClients();\n        // Override point where accessors are turned on; importantly,\n        // this is after clients have fully readied, providing a guarantee\n        // that any property effects occur only after all clients are ready.\n        this.__dataReady = true;\n      } else {\n        this.__enableOrFlushClients();\n      }\n    }\n\n    // NOTE: We ensure clients either enable or flush as appropriate. This\n    // handles two corner cases:\n    // (1) clients flush properly when connected/enabled before the host\n    // enables; e.g.\n    //   (a) Templatize stamps with no properties and does not flush and\n    //   (b) the instance is inserted into dom and\n    //   (c) then the instance flushes.\n    // (2) clients enable properly when not connected/enabled when the host\n    // flushes; e.g.\n    //   (a) a template is runtime stamped and not yet connected/enabled\n    //   (b) a host sets a property, causing stamped dom to flush\n    //   (c) the stamped dom enables.\n    __enableOrFlushClients () {\n      let clients = this.__dataPendingClients;\n      if (clients) {\n        this.__dataPendingClients = null;\n        for (let i = 0; i < clients.length; i++) {\n          let client = clients[i];\n          if (!client.__dataEnabled) {\n            client._enableProperties();\n          } else if (client.__dataPending) {\n            client._flushProperties();\n          }\n        }\n      }\n    }\n\n    /**\n     * Perform any initial setup on client dom. Called before the first\n     * `_flushProperties` call on client dom and before any element\n     * observers are called.\n     *\n     * @protected\n     */\n    _readyClients () {\n      this.__enableOrFlushClients();\n    }\n\n    /**\n     * Sets a bag of property changes to this instance, and\n     * synchronously processes all effects of the properties as a batch.\n     *\n     * Property names must be simple properties, not paths.  Batched\n     * path propagation is not supported.\n     *\n     * @param {Object} props Bag of one or more key-value pairs whose key is\n     *   a property and value is the new value to set for that property.\n     * @param {boolean=} setReadOnly When true, any private values set in\n     *   `props` will be set. By default, `setProperties` will not set\n     *   `readOnly: true` root properties.\n     * @public\n     */\n    setProperties (props, setReadOnly) {\n      for (let path in props) {\n        if (setReadOnly || !this[TYPES.READ_ONLY] || !this[TYPES.READ_ONLY][path]) {\n          // TODO(kschaaf): explicitly disallow paths in setProperty?\n          // wildcard observers currently only pass the first changed path\n          // in the `info` object, and you could do some odd things batching\n          // paths, e.g. {'foo.bar': {...}, 'foo': null}\n          this._setPendingPropertyOrPath(path, props[path], true);\n        }\n      }\n      this._invalidateProperties();\n    }\n\n    /**\n     * Overrides `PropertyAccessors` so that property accessor\n     * side effects are not enabled until after client dom is fully ready.\n     * Also calls `_flushClients` callback to ensure client dom is enabled\n     * that was not enabled as a result of flushing properties.\n     *\n     * @override\n     */\n    ready () {\n      // It is important that `super.ready()` is not called here as it\n      // immediately turns on accessors. Instead, we wait until `readyClients`\n      // to enable accessors to provide a guarantee that clients are ready\n      // before processing any accessors side effects.\n      this._flushProperties();\n      // If no data was pending, `_flushProperties` will not `flushClients`\n      // so ensure this is done.\n      if (!this.__dataClientsReady) {\n        this._flushClients();\n      }\n      // Before ready, client notifications do not trigger _flushProperties.\n      // Therefore a flush is necessary here if data has been set.\n      if (this.__dataPending) {\n        this._flushProperties();\n      }\n    }\n\n    /**\n     * Implements `PropertyAccessors`'s properties changed callback.\n     *\n     * Runs each class of effects for the batch of changed properties in\n     * a specific order (compute, propagate, reflect, observe, notify).\n     *\n     * @override\n     */\n    _propertiesChanged (currentProps, changedProps, oldProps) {\n      // ----------------------------\n      // let c = Object.getOwnPropertyNames(changedProps || {});\n      // window.debug && console.group(this.localName + '#' + this.id + ': ' + c);\n      // if (window.debug) { debugger; }\n      // ----------------------------\n      let hasPaths = this.__dataHasPaths;\n      this.__dataHasPaths = false;\n      // Compute properties\n      runComputedEffects(this, changedProps, oldProps, hasPaths);\n      // Clear notify properties prior to possible reentry (propagate, observe),\n      // but after computing effects have a chance to add to them\n      let notifyProps = this.__dataToNotify;\n      this.__dataToNotify = null;\n      // Propagate properties to clients\n      this._propagatePropertyChanges(changedProps, oldProps, hasPaths);\n      // Flush clients\n      this._flushClients();\n      // Reflect properties\n      runEffects(this, this[TYPES.REFLECT], changedProps, oldProps, hasPaths);\n      // Observe properties\n      runEffects(this, this[TYPES.OBSERVE], changedProps, oldProps, hasPaths);\n      // Notify properties to host\n      if (notifyProps) {\n        runNotifyEffects(this, notifyProps, changedProps, oldProps, hasPaths);\n      }\n      // Clear temporary cache at end of turn\n      if (this.__dataCounter === 1) {\n        this.__dataTemp = {};\n      }\n\n      if (this.render) {\n        this.render();\n      }\n      // ----------------------------\n      // window.debug && console.groupEnd(this.localName + '#' + this.id + ': ' + c);\n      // ----------------------------\n    }\n\n    /**\n     * Called to propagate any property changes to stamped template nodes\n     * managed by this element.\n     *\n     * @param {Object} changedProps Bag of changed properties\n     * @param {Object} oldProps Bag of previous values for changed properties\n     * @param {boolean} hasPaths True with `props` contains one or more paths\n     * @protected\n     */\n    _propagatePropertyChanges (changedProps, oldProps, hasPaths) {\n      if (this[TYPES.PROPAGATE]) {\n        runEffects(this, this[TYPES.PROPAGATE], changedProps, oldProps, hasPaths);\n      }\n    }\n\n    /**\n     * Aliases one data path as another, such that path notifications from one\n     * are routed to the other.\n     *\n     * @param {string | !Array<string|number>} to Target path to link.\n     * @param {string | !Array<string|number>} from Source path to link.\n     * @public\n     */\n    linkPaths (to, from) {\n      to = normalize(to);\n      from = normalize(from);\n      this.__dataLinkedPaths = this.__dataLinkedPaths || {};\n      this.__dataLinkedPaths[to] = from;\n    }\n\n    /**\n     * Removes a data path alias previously established with `_linkPaths`.\n     *\n     * Note, the path to unlink should be the target (`to`) used when\n     * linking the paths.\n     *\n     * @param {string | !Array<string|number>} path Target path to unlink.\n     * @public\n     */\n    unlinkPaths (path) {\n      path = normalize(path);\n      if (this.__dataLinkedPaths) {\n        delete this.__dataLinkedPaths[path];\n      }\n    }\n\n    /**\n      * Notify that an array has changed.\n      *\n      * Example:\n      *\n      *     this.items = [ {name: 'Jim'}, {name: 'Todd'}, {name: 'Bill'} ];\n      *     ...\n      *     this.items.splice(1, 1, {name: 'Sam'});\n      *     this.items.push({name: 'Bob'});\n      *     this.notifySplices('items', [\n      *       { index: 1, removed: [{name: 'Todd'}], addedCount: 1, obect: this.items, type: 'splice' },\n      *       { index: 3, removed: [], addedCount: 1, object: this.items, type: 'splice'}\n      *     ]);\n      *\n      * @param {string} path Path that should be notified.\n      * @param {Array} splices Array of splice records indicating ordered\n      *   changes that occurred to the array. Each record should have the\n      *   following fields:\n      *    * index: index at which the change occurred\n      *    * removed: array of items that were removed from this index\n      *    * addedCount: number of new items added at this index\n      *    * object: a reference to the array in question\n      *    * type: the string literal 'splice'\n      *\n      *   Note that splice records _must_ be normalized such that they are\n      *   reported in index order (raw results from `Object.observe` are not\n      *   ordered and must be normalized/merged before notifying).\n      * @public\n    */\n    notifySplices (path, splices) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get$0(this, path, info));\n      notifySplices(this, array, info.path, splices);\n    }\n\n    /**\n     * Convenience method for reading a value from a path.\n     *\n     * Note, if any part in the path is undefined, this method returns\n     * `undefined` (this method does not throw when dereferencing undefined\n     * paths).\n     *\n     * @param {(string|!Array<(string|number)>)} path Path to the value\n     *   to read.  The path may be specified as a string (e.g. `foo.bar.baz`)\n     *   or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n     *   bracketed expressions are not supported; string-based path parts\n     *   *must* be separated by dots.  Note that when dereferencing array\n     *   indices, the index may be used as a dotted part directly\n     *   (e.g. `users.12.name` or `['users', 12, 'name']`).\n     * @param {Object=} root Root object from which the path is evaluated.\n     * @return {*} Value at the path, or `undefined` if any part of the path\n     *   is undefined.\n     * @public\n     */\n    get (path, root) {\n      return get$0(root || this, path);\n    }\n\n    /**\n     * Convenience method for setting a value to a path and notifying any\n     * elements bound to the same path.\n     *\n     * Note, if any part in the path except for the last is undefined,\n     * this method does nothing (this method does not throw when\n     * dereferencing undefined paths).\n     *\n     * @param {(string|!Array<(string|number)>)} path Path to the value\n     *   to write.  The path may be specified as a string (e.g. `'foo.bar.baz'`)\n     *   or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n     *   bracketed expressions are not supported; string-based path parts\n     *   *must* be separated by dots.  Note that when dereferencing array\n     *   indices, the index may be used as a dotted part directly\n     *   (e.g. `'users.12.name'` or `['users', 12, 'name']`).\n     * @param {*} value Value to set at the specified path.\n     * @param {Object=} root Root object from which the path is evaluated.\n     *   When specified, no notification will occur.\n     * @public\n    */\n    set (path, value, root) {\n      if (root) {\n        set$0(root, path, value);\n      } else {\n        if (!this[TYPES.READ_ONLY] || !this[TYPES.READ_ONLY][/** @type {string} */(path)]) {\n          if (this._setPendingPropertyOrPath(path, value, true)) {\n            this._invalidateProperties();\n          }\n        }\n      }\n    }\n\n    /**\n     * Adds items onto the end of the array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.push`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @param {string | !Array<string|number>} path Path to array.\n     * @param {...*} items Items to push onto array\n     * @return {number} New length of the array.\n     * @public\n     */\n    push (path, ...items) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get$0(this, path, info));\n      let len = array.length;\n      let ret = array.push(...items);\n      if (items.length) {\n        notifySplice(this, array, info.path, len, items.length, []);\n      }\n      return ret;\n    }\n\n    /**\n     * Removes an item from the end of array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.pop`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @param {string | !Array<string|number>} path Path to array.\n     * @return {*} Item that was removed.\n     * @public\n     */\n    pop (path) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get$0(this, path, info));\n      let hadLength = Boolean(array.length);\n      let ret = array.pop();\n      if (hadLength) {\n        notifySplice(this, array, info.path, array.length, 0, [ret]);\n      }\n      return ret;\n    }\n\n    /**\n     * Starting from the start index specified, removes 0 or more items\n     * from the array and inserts 0 or more new items in their place.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.splice`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @param {string | !Array<string|number>} path Path to array.\n     * @param {number} start Index from which to start removing/inserting.\n     * @param {number} deleteCount Number of items to remove.\n     * @param {...*} items Items to insert into array.\n     * @return {Array} Array of removed items.\n     * @public\n     */\n    splice (path, start, deleteCount, ...items) {\n      let info = { path: '' };\n      let array = /** @type {Array} */(get$0(this, path, info));\n      // Normalize fancy native splice handling of crazy start values\n      if (start < 0) {\n        start = array.length - Math.floor(-start);\n      } else {\n        start = Math.floor(start);\n      }\n      if (!start) {\n        start = 0;\n      }\n      let ret = array.splice(start, deleteCount, ...items);\n      if (items.length || ret.length) {\n        notifySplice(this, array, info.path, start, items.length, ret);\n      }\n      return ret;\n    }\n\n    /**\n     * Removes an item from the beginning of array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.pop`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @param {string | !Array<string|number>} path Path to array.\n     * @return {*} Item that was removed.\n     * @public\n     */\n    shift (path) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get$0(this, path, info));\n      let hadLength = Boolean(array.length);\n      let ret = array.shift();\n      if (hadLength) {\n        notifySplice(this, array, info.path, 0, 0, [ret]);\n      }\n      return ret;\n    }\n\n    /**\n     * Adds items onto the beginning of the array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.push`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @param {string | !Array<string|number>} path Path to array.\n     * @param {...*} items Items to insert info array\n     * @return {number} New length of the array.\n     * @public\n     */\n    unshift (path, ...items) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get$0(this, path, info));\n      let ret = array.unshift(...items);\n      if (items.length) {\n        notifySplice(this, array, info.path, 0, items.length, []);\n      }\n      return ret;\n    }\n\n    /**\n     * Notify that a path has changed.\n     *\n     * Example:\n     *\n     *     this.item.user.name = 'Bob';\n     *     this.notifyPath('item.user.name');\n     *\n     * @param {string} path Path that should be notified.\n     * @param {*=} value Value at the path (optional).\n     * @public\n    */\n    notifyPath (path, value) {\n      /** @type {string} */\n      let propPath;\n      if (arguments.length === 1) {\n        // Get value if not supplied\n        let info = {path: ''};\n        value = get$0(this, path, info);\n        propPath = info.path;\n      } else if (Array.isArray(path)) {\n        // Normalize path if needed\n        propPath = normalize(path);\n      } else {\n        propPath = /** @type{string} */(path);\n      }\n      if (this._setPendingPropertyOrPath(propPath, value, true, true)) {\n        this._invalidateProperties();\n      }\n    }\n\n    /**\n     * Equivalent to static `createReadOnlyProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} property Property name\n     * @param {boolean=} protectedSetter Creates a custom protected setter\n     *   when `true`.\n     * @protected\n     */\n    _createReadOnlyProperty (property, protectedSetter) {\n      this._addPropertyEffect(property, TYPES.READ_ONLY);\n      if (protectedSetter) {\n        this['_set' + upper(property)] = /** @this {PropertyEffects} */function (value) {\n          this._setProperty(property, value);\n        };\n      }\n    }\n\n    /**\n     * Equivalent to static `createPropertyObserver` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} property Property name\n     * @param {string} methodName Name of observer method to call\n     * @param {boolean=} dynamicFn Whether the method name should be included as\n     *   a dependency to the effect.\n     * @protected\n     */\n    _createPropertyObserver (property, methodName, dynamicFn) {\n      let info = { property, methodName, dynamicFn: Boolean(dynamicFn) };\n      this._addPropertyEffect(property, TYPES.OBSERVE, {\n        fn: runObserverEffect, info, trigger: {name: property}\n      });\n      if (dynamicFn) {\n        this._addPropertyEffect(methodName, TYPES.OBSERVE, {\n          fn: runObserverEffect, info, trigger: {name: methodName}\n        });\n      }\n    }\n\n    /**\n     * Equivalent to static `createMethodObserver` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n     *   whether method names should be included as a dependency to the effect.\n     * @protected\n     */\n    _createMethodObserver (expression, dynamicFn) {\n      let sig = parseMethod(expression);\n      if (!sig) {\n        throw new Error(\"Malformed observer expression '\" + expression + \"'\");\n      }\n      createMethodEffect(this, sig, TYPES.OBSERVE, runMethodEffect, null, dynamicFn);\n    }\n\n    /**\n     * Equivalent to static `createNotifyingProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} property Property name\n     * @protected\n     */\n    _createNotifyingProperty (property) {\n      this._addPropertyEffect(property, TYPES.NOTIFY, {\n        fn: runNotifyEffect,\n        info: {\n          eventName: CaseMap.camelToDashCase(property) + '-changed',\n          property: property\n        }\n      });\n    }\n\n    /**\n     * Equivalent to static `createReflectedProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} property Property name\n     * @protected\n     */\n    _createReflectedProperty (property) {\n      let attr = CaseMap.camelToDashCase(property);\n      if (attr[0] === '-') {\n        console.warn('Property ' + property + ' cannot be reflected to attribute ' +\n          attr + ' because \"-\" is not a valid starting attribute name. Use a lowercase first letter for the property thisead.');\n      } else {\n        this._addPropertyEffect(property, TYPES.REFLECT, {\n          fn: runReflectEffect,\n          info: {\n            attrName: attr\n          }\n        });\n      }\n    }\n\n    /**\n     * Equivalent to static `createComputedProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} property Name of computed property to set\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n     *   whether method names should be included as a dependency to the effect.\n     * @protected\n     */\n    _createComputedProperty (property, expression, dynamicFn) {\n      let sig = parseMethod(expression);\n      if (!sig) {\n        throw new Error(\"Malformed computed expression '\" + expression + \"'\");\n      }\n      createMethodEffect(this, sig, TYPES.COMPUTE, runComputedEffect, property, dynamicFn);\n    }\n\n    // -- static class methods ------------\n\n    /**\n     * Ensures an accessor exists for the specified property, and adds\n     * to a list of \"property effects\" that will run when the accessor for\n     * the specified property is set.  Effects are grouped by \"type\", which\n     * roughly corresponds to a phase in effect processing.  The effect\n     * metadata should be in the following form:\n     *\n     *     {\n     *       fn: effectFunction, // Reference to function to call to perform effect\n     *       info: { ... }       // Effect metadata passed to function\n     *       trigger: {          // Optional triggering metadata; if not provided\n     *         name: string      // the property is treated as a wildcard\n     *         structured: boolean\n     *         wildcard: boolean\n     *       }\n     *     }\n     *\n     * Effects are called from `_propertiesChanged` in the following order by\n     * type:\n     *\n     * 1. COMPUTE\n     * 2. PROPAGATE\n     * 3. REFLECT\n     * 4. OBSERVE\n     * 5. NOTIFY\n     *\n     * Effect functions are called with the following signature:\n     *\n     *     effectFunction(inst, path, props, oldProps, info, hasPaths)\n     *\n     * @param {string} property Property that should trigger the effect\n     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @param {Object=} effect Effect metadata object\n     * @protected\n     */\n    static addPropertyEffect (property, type, effect) {\n      this.prototype._addPropertyEffect(property, type, effect);\n    }\n\n    /**\n     * Creates a single-property observer for the given property.\n     *\n     * @param {string} property Property name\n     * @param {string} methodName Name of observer method to call\n     * @param {boolean=} dynamicFn Whether the method name should be included as\n     *   a dependency to the effect.\n     * @protected\n     */\n    static createPropertyObserver (property, methodName, dynamicFn) {\n      this.prototype._createPropertyObserver(property, methodName, dynamicFn);\n    }\n\n    /**\n     * Creates a multi-property \"method observer\" based on the provided\n     * expression, which should be a string in the form of a normal Javascript\n     * function signature: `'methodName(arg1, [..., argn])'`.  Each argument\n     * should correspond to a property or path in the context of this\n     * prototype (or instance), or may be a literal string or number.\n     *\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n     *   whether method names should be included as a dependency to the effect.\n     * @protected\n     */\n    static createMethodObserver (expression, dynamicFn) {\n      this.prototype._createMethodObserver(expression, dynamicFn);\n    }\n\n    /**\n     * Causes the setter for the given property to dispatch `<property>-changed`\n     * events to notify of changes to the property.\n     *\n     * @param {string} property Property name\n     * @protected\n     */\n    static createNotifyingProperty (property) {\n      this.prototype._createNotifyingProperty(property);\n    }\n\n    /**\n     * Creates a read-only accessor for the given property.\n     *\n     * To set the property, use the protected `_setProperty` API.\n     * To create a custom protected setter (e.g. `_setMyProp()` for\n     * property `myProp`), pass `true` for `protectedSetter`.\n     *\n     * Note, if the property will have other property effects, this method\n     * should be called first, before adding other effects.\n     *\n     * @param {string} property Property name\n     * @param {boolean=} protectedSetter Creates a custom protected setter\n     *   when `true`.\n     * @protected\n     */\n    static createReadOnlyProperty (property, protectedSetter) {\n      this.prototype._createReadOnlyProperty(property, protectedSetter);\n    }\n\n    /**\n     * Causes the setter for the given property to reflect the property value\n     * to a (dash-cased) attribute of the same name.\n     *\n     * @param {string} property Property name\n     * @protected\n     */\n    static createReflectedProperty (property) {\n      this.prototype._createReflectedProperty(property);\n    }\n\n    /**\n     * Creates a computed property whose value is set to the result of the\n     * method described by the given `expression` each time one or more\n     * arguments to the method changes.  The expression should be a string\n     * in the form of a normal Javascript function signature:\n     * `'methodName(arg1, [..., argn])'`\n     *\n     * @param {string} property Name of computed property to set\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating whether\n     *   method names should be included as a dependency to the effect.\n     * @protected\n     */\n    static createComputedProperty (property, expression, dynamicFn) {\n      this.prototype._createComputedProperty(property, expression, dynamicFn);\n    }\n  }\n\n  // make a typing for closure :P\n  PropertyEffectsType = PropertyEffects;\n\n  return PropertyEffects;\n});\n\n\n\n// WEBPACK FOOTER //\n// ../src/core/mixins/property-effects.js","import '../utils/boot.js';\nimport { dedupingMixin } from '../utils/mixin.js';\nimport * as caseMap$0 from '../utils/case-map.js';\nimport { microTask } from '../utils/async.js';\n\nlet caseMap = caseMap$0;\n\nlet microtask = microTask;\n\n// Save map of native properties; this forms a blacklist or properties\n// that won't have their values \"saved\" by `saveAccessorValue`, since\n// reading from an HTMLElement accessor from the context of a prototype throws\nconst nativeProperties = {};\nlet proto = HTMLElement.prototype;\nwhile (proto) {\n  let props = Object.getOwnPropertyNames(proto);\n  for (let i=0; i<props.length; i++) {\n    nativeProperties[props[i]] = true;\n  }\n  proto = Object.getPrototypeOf(proto);\n}\n\n/**\n * Used to save the value of a property that will be overridden with\n * an accessor. If the `model` is a prototype, the values will be saved\n * in `__dataProto`, and it's up to the user (or downstream mixin) to\n * decide how/when to set these values back into the accessors.\n * If `model` is already an instance (it has a `__data` property), then\n * the value will be set as a pending property, meaning the user should\n * call `_invalidateProperties` or `_flushProperties` to take effect\n *\n * @param {Object} model Prototype or instance\n * @param {string} property Name of property\n * @private\n */\nfunction saveAccessorValue(model, property) {\n  // Don't read/store value for any native properties since they could throw\n  if (!nativeProperties[property]) {\n    let value = model[property];\n    if (value !== undefined) {\n      if (model.__data) {\n        // Adding accessor to instance; update the property\n        // It is the user's responsibility to call _flushProperties\n        model._setPendingProperty(property, value);\n      } else {\n        // Adding accessor to proto; save proto's value for instance-time use\n        if (!model.__dataProto) {\n          model.__dataProto = {};\n        } else if (!model.hasOwnProperty(JSCompiler_renameProperty('__dataProto', model))) {\n          model.__dataProto = Object.create(model.__dataProto);\n        }\n        model.__dataProto[property] = value;\n      }\n    }\n  }\n}\n\nexport const PropertyAccessors = dedupingMixin(superClass => {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_PropertyAccessors}\n   * @extends HTMLElement\n   * @unrestricted\n   */\n  class PropertyAccessors extends superClass {\n\n    /**\n     * Generates property accessors for all attributes in the standard\n     * static `observedAttributes` array.\n     *\n     * Attribute names are mapped to property names using the `dash-case` to\n     * `camelCase` convention\n     *\n     */\n    static createPropertiesForAttributes() {\n      let a$ = this.observedAttributes;\n      for (let i=0; i < a$.length; i++) {\n        this.prototype._createPropertyAccessor(caseMap.dashToCamelCase(a$[i]));\n      }\n    }\n\n    constructor() {\n      super();\n      /** @type {boolean} */\n      this.__serializing;\n      /** @type {number} */\n      this.__dataCounter;\n      /** @type {boolean} */\n      this.__dataEnabled;\n      /** @type {boolean} */\n      this.__dataReady;\n      /** @type {boolean} */\n      this.__dataInvalid;\n      /** @type {!Object} */\n      this.__data;\n      /** @type {Object} */\n      this.__dataPending;\n      /** @type {Object} */\n      this.__dataOld;\n      /** @type {Object} */\n      this.__dataProto;\n      /** @type {Object} */\n      this.__dataHasAccessor;\n      /** @type {Object} */\n      this.__dataInstanceProps;\n      this._initializeProperties();\n    }\n\n    /**\n     * Implements native Custom Elements `attributeChangedCallback` to\n     * set an attribute value to a property via `_attributeToProperty`.\n     *\n     * @param {string} name Name of attribute that changed\n     * @param {?string} old Old attribute value\n     * @param {?string} value New attribute value\n     */\n    attributeChangedCallback(name, old, value) {\n      if (old !== value) {\n        this._attributeToProperty(name, value);\n      }\n    }\n\n    /**\n     * Initializes the local storage for property accessors.\n     *\n     * Provided as an override point for performing any setup work prior\n     * to initializing the property accessor system.\n     *\n     * @protected\n     */\n    _initializeProperties() {\n      this.__serializing = false;\n      this.__dataCounter = 0;\n      this.__dataEnabled = false;\n      this.__dataReady = false;\n      this.__dataInvalid = false;\n      this.__data = {};\n      this.__dataPending = null;\n      this.__dataOld = null;\n      if (this.__dataProto) {\n        this._initializeProtoProperties(this.__dataProto);\n        this.__dataProto = null;\n      }\n      // Capture instance properties; these will be set into accessors\n      // during first flush. Don't set them here, since we want\n      // these to overwrite defaults/constructor assignments\n      for (let p in this.__dataHasAccessor) {\n        if (this.hasOwnProperty(p)) {\n          this.__dataInstanceProps = this.__dataInstanceProps || {};\n          this.__dataInstanceProps[p] = this[p];\n          delete this[p];\n        }\n      }\n    }\n\n    /**\n     * Called at instance time with bag of properties that were overwritten\n     * by accessors on the prototype when accessors were created.\n     *\n     * The default implementation sets these properties back into the\n     * setter at instance time.  This method is provided as an override\n     * point for customizing or providing more efficient initialization.\n     *\n     * @param {Object} props Bag of property values that were overwritten\n     *   when creating property accessors.\n     * @protected\n     */\n    _initializeProtoProperties(props) {\n      for (let p in props) {\n        this._setProperty(p, props[p]);\n      }\n    }\n\n    /**\n     * Called at ready time with bag of instance properties that overwrote\n     * accessors when the element upgraded.\n     *\n     * The default implementation sets these properties back into the\n     * setter at ready time.  This method is provided as an override\n     * point for customizing or providing more efficient initialization.\n     *\n     * @param {Object} props Bag of property values that were overwritten\n     *   when creating property accessors.\n     * @protected\n     */\n    _initializeInstanceProperties(props) {\n      Object.assign(this, props);\n    }\n\n    /**\n     * Ensures the element has the given attribute. If it does not,\n     * assigns the given value to the attribute.\n     *\n     *\n     * @param {string} attribute Name of attribute to ensure is set.\n     * @param {string} value of the attribute.\n     */\n    _ensureAttribute(attribute, value) {\n      if (!this.hasAttribute(attribute)) {\n        this._valueToNodeAttribute(this, value, attribute);\n      }\n    }\n\n    /**\n     * Deserializes an attribute to its associated property.\n     *\n     * This method calls the `_deserializeValue` method to convert the string to\n     * a typed value.\n     *\n     * @param {string} attribute Name of attribute to deserialize.\n     * @param {?string} value of the attribute.\n     * @param {*=} type type to deserialize to.\n     */\n    _attributeToProperty(attribute, value, type) {\n      // Don't deserialize back to property if currently reflecting\n      if (!this.__serializing) {\n        let property = caseMap.dashToCamelCase(attribute);\n        this[property] = this._deserializeValue(value, type);\n      }\n    }\n\n    /**\n     * Serializes a property to its associated attribute.\n     *\n     * @param {string} property Property name to reflect.\n     * @param {string=} attribute Attribute name to reflect.\n     * @param {*=} value Property value to refect.\n     */\n    _propertyToAttribute(property, attribute, value) {\n      this.__serializing = true;\n      value = (arguments.length < 3) ? this[property] : value;\n      this._valueToNodeAttribute(this, value,\n        attribute || caseMap.camelToDashCase(property));\n      this.__serializing = false;\n    }\n\n    /**\n     * Sets a typed value to an HTML attribute on a node.\n     *\n     * This method calls the `_serializeValue` method to convert the typed\n     * value to a string.  If the `_serializeValue` method returns `undefined`,\n     * the attribute will be removed (this is the default for boolean\n     * type `false`).\n     *\n     * @param {Element} node Element to set attribute to.\n     * @param {*} value Value to serialize.\n     * @param {string} attribute Attribute name to serialize to.\n     */\n    _valueToNodeAttribute(node, value, attribute) {\n      let str = this._serializeValue(value);\n      if (str === undefined) {\n        node.removeAttribute(attribute);\n      } else {\n        node.setAttribute(attribute, str);\n      }\n    }\n\n    /**\n     * Converts a typed JavaScript value to a string.\n     *\n     * This method is called by Polymer when setting JS property values to\n     * HTML attributes.  Users may override this method on Polymer element\n     * prototypes to provide serialization for custom types.\n     *\n     * @param {*} value Property value to serialize.\n     * @return {string | undefined} String serialized from the provided property value.\n     */\n    _serializeValue(value) {\n      /* eslint-disable no-fallthrough */\n      switch (typeof value) {\n        case 'boolean':\n          return value ? '' : undefined;\n\n        case 'object':\n          if (value instanceof Date) {\n            return value.toString();\n          } else if (value) {\n            try {\n              return JSON.stringify(value);\n            } catch(x) {\n              return '';\n            }\n          }\n\n        default:\n          return value != null ? value.toString() : undefined;\n      }\n    }\n\n    /**\n     * Converts a string to a typed JavaScript value.\n     *\n     * This method is called by Polymer when reading HTML attribute values to\n     * JS properties.  Users may override this method on Polymer element\n     * prototypes to provide deserialization for custom `type`s.  Note,\n     * the `type` argument is the value of the `type` field provided in the\n     * `properties` configuration object for a given property, and is\n     * by convention the constructor for the type to deserialize.\n     *\n     * Note: The return value of `undefined` is used as a sentinel value to\n     * indicate the attribute should be removed.\n     *\n     * @param {?string} value Attribute value to deserialize.\n     * @param {*=} type Type to deserialize the string to.\n     * @return {*} Typed value deserialized from the provided string.\n     */\n    _deserializeValue(value, type) {\n      /**\n       * @type {*}\n       */\n      let outValue;\n      switch (type) {\n        case Number:\n          outValue = Number(value);\n          break;\n\n        case Boolean:\n          outValue = (value !== null);\n          break;\n\n        case Object:\n          try {\n            outValue = JSON.parse(/** @type string */(value));\n          } catch(x) {\n            // allow non-JSON literals like Strings and Numbers\n          }\n          break;\n\n        case Array:\n          try {\n            outValue = JSON.parse(/** @type string */(value));\n          } catch(x) {\n            outValue = null;\n            console.warn(`Polymer::Attributes: couldn't decode Array as JSON: ${value}`);\n          }\n          break;\n\n        case Date:\n          outValue = new Date(value);\n          break;\n\n        case String:\n        default:\n          outValue = value;\n          break;\n      }\n\n      return outValue;\n    }\n    /* eslint-enable no-fallthrough */\n\n    /**\n     * Creates a setter/getter pair for the named property with its own\n     * local storage.  The getter returns the value in the local storage,\n     * and the setter calls `_setProperty`, which updates the local storage\n     * for the property and enqueues a `_propertiesChanged` callback.\n     *\n     * This method may be called on a prototype or an instance.  Calling\n     * this method may overwrite a property value that already exists on\n     * the prototype/instance by creating the accessor.  When calling on\n     * a prototype, any overwritten values are saved in `__dataProto`,\n     * and it is up to the subclasser to decide how/when to set those\n     * properties back into the accessor.  When calling on an instance,\n     * the overwritten value is set via `_setPendingProperty`, and the\n     * user should call `_invalidateProperties` or `_flushProperties`\n     * for the values to take effect.\n     *\n     * @param {string} property Name of the property\n     * @param {boolean=} readOnly When true, no setter is created; the\n     *   protected `_setProperty` function must be used to set the property\n     * @protected\n     */\n    _createPropertyAccessor(property, readOnly) {\n      if (!this.hasOwnProperty('__dataHasAccessor')) {\n        this.__dataHasAccessor = Object.assign({}, this.__dataHasAccessor);\n      }\n      if (!this.__dataHasAccessor[property]) {\n        this.__dataHasAccessor[property] = true;\n        saveAccessorValue(this, property);\n        Object.defineProperty(this, property, {\n          /* eslint-disable valid-jsdoc */\n          /** @this {PropertyAccessors} */\n          get: function() {\n            return this.__data[property];\n          },\n          /** @this {PropertyAccessors} */\n          set: readOnly ? function() {} : function(value) {\n            this._setProperty(property, value);\n          }\n          /* eslint-enable */\n        });\n      }\n    }\n\n    /**\n     * Returns true if this library created an accessor for the given property.\n     *\n     * @param {string} property Property name\n     * @return {boolean} True if an accessor was created\n     */\n    _hasAccessor(property) {\n      return this.__dataHasAccessor && this.__dataHasAccessor[property];\n    }\n\n    /**\n     * Updates the local storage for a property (via `_setPendingProperty`)\n     * and enqueues a `_proeprtiesChanged` callback.\n     *\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @protected\n     */\n    _setProperty(property, value) {\n      if (this._setPendingProperty(property, value)) {\n        this._invalidateProperties();\n      }\n    }\n\n    /**\n     * Updates the local storage for a property, records the previous value,\n     * and adds it to the set of \"pending changes\" that will be passed to the\n     * `_propertiesChanged` callback.  This method does not enqueue the\n     * `_propertiesChanged` callback.\n     *\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @return {boolean} Returns true if the property changed\n     * @protected\n     */\n    _setPendingProperty(property, value) {\n      let old = this.__data[property];\n      let changed = this._shouldPropertyChange(property, value, old);\n      if (changed) {\n        if (!this.__dataPending) {\n          this.__dataPending = {};\n          this.__dataOld = {};\n        }\n        // Ensure old is captured from the last turn\n        if (this.__dataOld && !(property in this.__dataOld)) {\n          this.__dataOld[property] = old;\n        }\n        this.__data[property] = value;\n        this.__dataPending[property] = value;\n      }\n      return changed;\n    }\n\n    /**\n     * Returns true if the specified property has a pending change.\n     *\n     * @param {string} prop Property name\n     * @return {boolean} True if property has a pending change\n     * @protected\n     */\n    _isPropertyPending(prop) {\n      return Boolean(this.__dataPending && (prop in this.__dataPending));\n    }\n\n    /**\n     * Marks the properties as invalid, and enqueues an async\n     * `_propertiesChanged` callback.\n     *\n     * @protected\n     */\n    _invalidateProperties() {\n      if (!this.__dataInvalid && this.__dataReady) {\n        this.__dataInvalid = true;\n        microtask.run(() => {\n          if (this.__dataInvalid) {\n            this.__dataInvalid = false;\n            this._flushProperties();\n          }\n        });\n      }\n    }\n\n    /**\n     * Call to enable property accessor processing. Before this method is\n     * called accessor values will be set but side effects are\n     * queued. When called, any pending side effects occur immediately.\n     * For elements, generally `connectedCallback` is a normal spot to do so.\n     * It is safe to call this method multiple times as it only turns on\n     * property accessors once.\n     */\n    _enableProperties() {\n      if (!this.__dataEnabled) {\n        this.__dataEnabled = true;\n        if (this.__dataInstanceProps) {\n          this._initializeInstanceProperties(this.__dataInstanceProps);\n          this.__dataInstanceProps = null;\n        }\n        this.ready();\n      }\n    }\n\n    /**\n     * Calls the `_propertiesChanged` callback with the current set of\n     * pending changes (and old values recorded when pending changes were\n     * set), and resets the pending set of changes. Generally, this method\n     * should not be called in user code.\n     *\n     *\n     * @protected\n     */\n    _flushProperties() {\n      if (this.__dataPending && this.__dataOld) {\n        let changedProps = this.__dataPending;\n        this.__dataPending = null;\n        this.__dataCounter++;\n        this._propertiesChanged(this.__data, changedProps, this.__dataOld);\n        this.__dataCounter--;\n      }\n    }\n\n    /**\n     * Lifecycle callback called the first time properties are being flushed.\n     * Prior to `ready`, all property sets through accessors are queued and\n     * their effects are flushed after this method returns.\n     *\n     * Users may override this function to implement behavior that is\n     * dependent on the element having its properties initialized, e.g.\n     * from defaults (initialized from `constructor`, `_initializeProperties`),\n     * `attributeChangedCallback`, or values propagated from host e.g. via\n     * bindings.  `super.ready()` must be called to ensure the data system\n     * becomes enabled.\n     *\n     * @public\n     */\n    ready() {\n      this.__dataReady = true;\n      // Run normal flush\n      this._flushProperties();\n    }\n\n    /**\n     * Callback called when any properties with accessors created via\n     * `_createPropertyAccessor` have been set.\n     *\n     * @param {!Object} currentProps Bag of all current accessor values\n     * @param {!Object} changedProps Bag of properties changed since the last\n     *   call to `_propertiesChanged`\n     * @param {!Object} oldProps Bag of previous values for each property\n     *   in `changedProps`\n     * @protected\n     */\n    _propertiesChanged(currentProps, changedProps, oldProps) { // eslint-disable-line no-unused-vars\n    }\n\n    /**\n     * Method called to determine whether a property value should be\n     * considered as a change and cause the `_propertiesChanged` callback\n     * to be enqueued.\n     *\n     * The default implementation returns `true` for primitive types if a\n     * strict equality check fails, and returns `true` for all Object/Arrays.\n     * The method always returns false for `NaN`.\n     *\n     * Override this method to e.g. provide stricter checking for\n     * Objects/Arrays when using immutable patterns.\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     *   and enqueue a `_proeprtiesChanged` callback\n     * @protected\n     */\n    _shouldPropertyChange(property, value, old) {\n      return (\n        // Strict equality check\n        (old !== value &&\n         // This ensures (old==NaN, value==NaN) always returns false\n         (old === old || value === value))\n      );\n    }\n\n  }\n\n  return PropertyAccessors;\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@polymer/polymer/lib/mixins/property-accessors.js","// comes from template-stamp.js but removing the templating using html\n\nfunction createNodeEventHandler (context, eventName, methodName) {\n  // Instances can optionally have a _methodHost which allows redirecting where\n  // to find methods. Currently used by `templatize`.\n  context = context._methodHost || context;\n  let handler = function (e) {\n    if (context[methodName]) {\n      context[methodName](e, e.detail);\n    } else {\n      console.warn('listener method `' + methodName + '` not defined');\n    }\n  };\n  return handler;\n}\n\nexport default superClass => {\n  return class extends superClass {\n    /**\n     * Adds an event listener by method name for the event provided.\n     *\n     * This method generates a handler function that looks up the method\n     * name at handling time.\n     *\n     * @param {Node} node Node to add listener on\n     * @param {string} eventName Name of event\n     * @param {string} methodName Name of method\n     * @param {*=} context Context the method will be called on (defaults\n     *   to `node`)\n     * @return {Function} Generated handler function\n     */\n    _addMethodEventListenerToNode (node, eventName, methodName, context) {\n      context = context || node;\n      let handler = createNodeEventHandler(context, eventName, methodName);\n      this._addEventListenerToNode(node, eventName, handler);\n      return handler;\n    }\n\n    /**\n     * Override point for adding custom or simulated event handling.\n     *\n     * @param {Node} node Node to add event listener to\n     * @param {string} eventName Name of event\n     * @param {Function} handler Listener function to add\n     */\n    _addEventListenerToNode (node, eventName, handler) {\n      node.addEventListener(eventName, handler);\n    }\n\n    /**\n     * Override point for adding custom or simulated event handling.\n     *\n     * @param {Node} node Node to remove event listener from\n     * @param {string} eventName Name of event\n     * @param {Function} handler Listener function to remove\n     */\n    _removeEventListenerFromNode (node, eventName, handler) {\n      node.removeEventListener(eventName, handler);\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ../src/core/mixins/template-stamp.js","/**\n* Helper api for enqueing client dom created by a host element.\n*\n* By default elements are flushed via `_flushProperties` when\n* `connectedCallback` is called. Elements attach their client dom to\n* themselves at `ready` time which results from this first flush.\n* This provides an ordering guarantee that the client dom an element\n* creates is flushed before the element itself (i.e. client `ready`\n* fires before host `ready`).\n*\n* However, if `_flushProperties` is called *before* an element is connected,\n* as for example `Templatize` does, this ordering guarantee cannot be\n* satisfied because no elements are connected. (Note: Bound elements that\n* receive data do become enqueued clients and are properly ordered but\n* unbound elements are not.)\n*\n* To maintain the desired \"client before host\" ordering guarantee for this\n* case we rely on the \"host stack. Client nodes registers themselves with\n* the creating host element when created. This ensures that all client dom\n* is readied in the proper order, maintaining the desired guarantee.\n*\n* @private\n*/\n\nexport default {\n  stack: [],\n\n  /**\n   * @param {*} inst Instance to add to hostStack\n   * @this {hostStack}\n   */\n  registerHost (inst) {\n    if (this.stack.length) {\n      let host = this.stack[this.stack.length - 1];\n      host._enqueueClient(inst);\n    }\n  },\n\n  /**\n   * @param {*} inst Instance to begin hosting\n   * @this {hostStack}\n   */\n  beginHosting (inst) {\n    this.stack.push(inst);\n  },\n\n  /**\n   * @param {*} inst Instance to end hosting\n   * @this {hostStack}\n   */\n  endHosting (inst) {\n    let stackLen = this.stack.length;\n    if (stackLen && this.stack[stackLen - 1] === inst) {\n      this.stack.pop();\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ../src/core/utils/host-stack.js","import { root as root$0, isAncestor, isDescendant, get as get$0, isPath as isPath$0, translate } from '@polymer/polymer/lib/utils/path';\nimport { camelToDashCase as camelToDashCase$0 } from '@polymer/polymer/lib/utils/case-map';\nimport { sanitizeDOMValue } from '@polymer/polymer/lib/utils/settings';\nimport TYPES from './property-effects-types';\n\nlet dedupeId = 0;\nconst emptyArray = [];\n\n/**\n * Ensures that the model has an own-property map of effects for the given type.\n * The model may be a prototype or an instance.\n *\n * Property effects are stored as arrays of effects by property in a map,\n * by named type on the model. e.g.\n *\n *   __computeEffects: {\n *     foo: [ ... ],\n *     bar: [ ... ]\n *   }\n *\n * If the model does not yet have an effect map for the type, one is created\n * and returned.  If it does, but it is not an own property (i.e. the\n * prototype had effects), the the map is deeply cloned and the copy is\n * set on the model and returned, ready for new effects to be added.\n *\n * @param {Object} model Prototype or instance\n * @param {string} type Property effect type\n * @return {Object} The own-property map of effects for the given type\n * @private\n */\nexport function ensureOwnEffectMap (model, type) {\n  let effects = model[type];\n  if (!effects) {\n    effects = model[type] = {};\n  } else if (!model.hasOwnProperty(type)) {\n    effects = model[type] = Object.create(model[type]);\n    for (let p in effects) {\n      let protoFx = effects[p];\n      let instFx = effects[p] = Array(protoFx.length);\n      for (let i = 0; i < protoFx.length; i++) {\n        instFx[i] = protoFx[i];\n      }\n    }\n  }\n  return effects;\n}\n\n// -- effects ----------------------------------------------\n\n/**\n * Runs all effects of a given type for the given set of property changes\n * on an instance.\n *\n * @param {!PropertyEffectsType} inst The instance with effects to run\n * @param {Object} effects Object map of property-to-Array of effects\n * @param {Object} props Bag of current property changes\n * @param {Object=} oldProps Bag of previous values for changed properties\n * @param {boolean=} hasPaths True with `props` contains one or more paths\n * @param {*=} extraArgs Additional metadata to pass to effect function\n * @return {boolean} True if an effect ran for this property\n * @private\n */\nexport function runEffects (inst, effects, props, oldProps, hasPaths, extraArgs) {\n  if (effects) {\n    let ran = false;\n    let id = dedupeId++;\n    for (let prop in props) {\n      if (runEffectsForProperty(inst, effects, id, prop, props, oldProps, hasPaths, extraArgs)) {\n        ran = true;\n      }\n    }\n    return ran;\n  }\n  return false;\n}\n\n/**\n * Runs a list of effects for a given property.\n *\n * @param {!PropertyEffectsType} inst The instance with effects to run\n * @param {Object} effects Object map of property-to-Array of effects\n * @param {number} dedupeId Counter used for de-duping effects\n * @param {string} prop Name of changed property\n * @param {*} props Changed properties\n * @param {*} oldProps Old properties\n * @param {boolean=} hasPaths True with `props` contains one or more paths\n * @param {*=} extraArgs Additional metadata to pass to effect function\n * @return {boolean} True if an effect ran for this property\n * @private\n */\nexport function runEffectsForProperty (inst, effects, dedupeId, prop, props, oldProps, hasPaths, extraArgs) {\n  let ran = false;\n  let rootProperty = hasPaths ? root$0(prop) : prop;\n  let fxs = effects[rootProperty];\n  if (fxs) {\n    for (let i = 0, l = fxs.length, fx; (i < l) && (fx = fxs[i]); i++) {\n      if ((!fx.info || fx.info.lastRun !== dedupeId) &&\n          (!hasPaths || pathMatchesTrigger(prop, fx.trigger))) {\n        if (fx.info) {\n          fx.info.lastRun = dedupeId;\n        }\n        fx.fn(inst, prop, props, oldProps, fx.info, hasPaths, extraArgs);\n        ran = true;\n      }\n    }\n  }\n  return ran;\n}\n\n/**\n * Determines whether a property/path that has changed matches the trigger\n * criteria for an effect.  A trigger is a descriptor with the following\n * structure, which matches the descriptors returned from `parseArg`.\n * e.g. for `foo.bar.*`:\n * ```\n * trigger: {\n *   name: 'a.b',\n *   structured: true,\n *   wildcard: true\n * }\n * ```\n * If no trigger is given, the path is deemed to match.\n *\n * @param {string} path Path or property that changed\n * @param {DataTrigger} trigger Descriptor\n * @return {boolean} Whether the path matched the trigger\n */\nexport function pathMatchesTrigger (path, trigger) {\n  if (trigger) {\n    let triggerPath = trigger.name;\n    return (triggerPath === path) ||\n      (trigger.structured && isAncestor(triggerPath, path)) ||\n      (trigger.wildcard && isDescendant(triggerPath, path));\n  } else {\n    return true;\n  }\n}\n\n/**\n * Implements the \"observer\" effect.\n *\n * Calls the method with `info.methodName` on the instance, passing the\n * new and old values.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @private\n */\nexport function runObserverEffect (inst, property, props, oldProps, info) {\n  let fn = inst[info.methodName];\n  let changedProp = info.property;\n  if (fn) {\n    fn.call(inst, inst.__data[changedProp], oldProps[changedProp]);\n  } else if (!info.dynamicFn) {\n    console.warn('observer method `' + info.methodName + '` not defined');\n  }\n}\n\n/**\n * Runs \"notify\" effects for a set of changed properties.\n *\n * This method differs from the generic `runEffects` method in that it\n * will dispatch path notification events in the case that the property\n * changed was a path and the root property for that path didn't have a\n * \"notify\" effect.  This is to maintain 1.0 behavior that did not require\n * `notify: true` to ensure object sub-property notifications were\n * sent.\n *\n * @param {!PropertyEffectsType} inst The instance with effects to run\n * @param {Object} notifyProps Bag of properties to notify\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @private\n */\nexport function runNotifyEffects (inst, notifyProps, props, oldProps, hasPaths) {\n  // Notify\n  let fxs = inst[TYPES.NOTIFY];\n  let notified;\n  let id = dedupeId++;\n  // Try normal notify effects; if none, fall back to try path notification\n  for (let prop in notifyProps) {\n    if (notifyProps[prop]) {\n      if (fxs && runEffectsForProperty(inst, fxs, id, prop, props, oldProps, hasPaths)) {\n        notified = true;\n      } else if (hasPaths && notifyPath(inst, prop, props)) {\n        notified = true;\n      }\n    }\n  }\n  // Flush host if we actually notified and host was batching\n  // And the host has already initialized clients; this prevents\n  // an issue with a host observing data changes before clients are ready.\n  let host;\n  if (notified && (host = inst.__dataHost) && host._invalidateProperties) {\n    host._invalidateProperties();\n  }\n}\n\n/**\n * Dispatches {property}-changed events with path information in the detail\n * object to indicate a sub-path of the property was changed.\n *\n * @param {!PropertyEffectsType} inst The element from which to fire the event\n * @param {string} path The path that was changed\n * @param {Object} props Bag of current property changes\n * @return {boolean} Returns true if the path was notified\n * @private\n */\nexport function notifyPath (inst, path, props) {\n  let rootProperty = root$0(path);\n  if (rootProperty !== path) {\n    let eventName = camelToDashCase$0(rootProperty) + '-changed';\n    dispatchNotifyEvent(inst, eventName, props[path], path);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Dispatches {property}-changed events to indicate a property (or path)\n * changed.\n *\n * @param {!PropertyEffectsType} inst The element from which to fire the event\n * @param {string} eventName The name of the event to send ('{property}-changed')\n * @param {*} value The value of the changed property\n * @param {string | null | undefined} path If a sub-path of this property changed, the path\n *   that changed (optional).\n * @private\n * @suppress {invalidCasts}\n */\nexport function dispatchNotifyEvent (inst, eventName, value, path) {\n  let detail = {\n    value: value,\n    queueProperty: true\n  };\n  if (path) {\n    detail.path = path;\n  }\n  /** @type {!HTMLElement} */(inst).dispatchEvent(new window.CustomEvent(eventName, { detail }));\n}\n\n/**\n * Implements the \"notify\" effect.\n *\n * Dispatches a non-bubbling event named `info.eventName` on the instance\n * with a detail object containing the new `value`.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @private\n */\nexport function runNotifyEffect (inst, property, props, oldProps, info, hasPaths) {\n  let rootProperty = hasPaths ? root$0(property) : property;\n  let path = rootProperty !== property ? property : null;\n  let value = path ? get$0(inst, path) : inst.__data[property];\n  if (path && value === undefined) {\n    value = props[property];  // specifically for .splices\n  }\n  dispatchNotifyEvent(inst, info.eventName, value, path);\n}\n\n/**\n * Handler function for 2-way notification events. Receives context\n * information captured in the `addNotifyListener` closure from the\n * `__notifyListeners` metadata.\n *\n * Sets the value of the notified property to the host property or path.  If\n * the event contained path information, translate that path to the host\n * scope's name for that path first.\n *\n * @param {CustomEvent} event Notification event (e.g. '<property>-changed')\n * @param {!PropertyEffectsType} inst Host element instance handling the notification event\n * @param {string} fromProp Child element property that was bound\n * @param {string} toPath Host property/path that was bound\n * @param {boolean} negate Whether the binding was negated\n * @private\n */\nexport function handleNotification (event, inst, fromProp, toPath, negate) {\n  let value;\n  let detail = /** @type {Object} */(event.detail);\n  let fromPath = detail && detail.path;\n  if (fromPath) {\n    toPath = translate(fromProp, toPath, fromPath);\n    value = detail && detail.value;\n  } else {\n    value = event.target[fromProp];\n  }\n  value = negate ? !value : value;\n  if (!inst[TYPES.READ_ONLY] || !inst[TYPES.READ_ONLY][toPath]) {\n    if (inst._setPendingPropertyOrPath(toPath, value, true, Boolean(fromPath)) &&\n      (!detail || !detail.queueProperty)) {\n      inst._invalidateProperties();\n    }\n  }\n}\n\n/**\n * Implements the \"reflect\" effect.\n *\n * Sets the attribute named `info.attrName` to the given property value.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @private\n */\nexport function runReflectEffect (inst, property, props, oldProps, info) {\n  let value = inst.__data[property];\n  if (sanitizeDOMValue) {\n    value = sanitizeDOMValue(value, info.attrName, 'attribute', /** @type {Node} */(inst));\n  }\n  inst._propertyToAttribute(property, info.attrName, value);\n}\n\n/**\n * Runs \"computed\" effects for a set of changed properties.\n *\n * This method differs from the generic `runEffects` method in that it\n * continues to run computed effects based on the output of each pass until\n * there are no more newly computed properties.  This ensures that all\n * properties that will be computed by the initial set of changes are\n * computed before other effects (binding propagation, observers, and notify)\n * run.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {!Object} changedProps Bag of changed properties\n * @param {!Object} oldProps Bag of previous values for changed properties\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @private\n */\nexport function runComputedEffects (inst, changedProps, oldProps, hasPaths) {\n  let computeEffects = inst[TYPES.COMPUTE];\n  if (computeEffects) {\n    let inputProps = changedProps;\n    while (runEffects(inst, computeEffects, inputProps, oldProps, hasPaths)) {\n      Object.assign(oldProps, inst.__dataOld);\n      Object.assign(changedProps, inst.__dataPending);\n      inputProps = inst.__dataPending;\n      inst.__dataPending = null;\n    }\n  }\n}\n\n/**\n * Implements the \"computed property\" effect by running the method with the\n * values of the arguments specified in the `info` object and setting the\n * return value to the computed property specified.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @private\n */\nexport function runComputedEffect (inst, property, props, oldProps, info) {\n  let result = runMethodEffect(inst, property, props, oldProps, info);\n  let computedProp = info.methodInfo;\n  if (inst.__dataHasAccessor && inst.__dataHasAccessor[computedProp]) {\n    inst._setPendingProperty(computedProp, result, true);\n  } else {\n    inst[computedProp] = result;\n  }\n}\n\n/**\n * Computes path changes based on path links set up using the `linkPaths`\n * API.\n *\n * @param {!PropertyEffectsType} inst The instance whose props are changing\n * @param {string | !Array<(string|number)>} path Path that has changed\n * @param {*} value Value of changed path\n * @private\n */\nexport function computeLinkedPaths (inst, path, value) {\n  let links = inst.__dataLinkedPaths;\n  if (links) {\n    let link;\n    for (let a in links) {\n      let b = links[a];\n      if (isDescendant(a, path)) {\n        link = translate(a, b, path);\n        inst._setPendingPropertyOrPath(link, value, true, true);\n      } else if (isDescendant(b, path)) {\n        link = translate(b, a, path);\n        inst._setPendingPropertyOrPath(link, value, true, true);\n      }\n    }\n  }\n}\n\n// -- for method-based effects (complexObserver & computed) --------------\n\n/**\n * Adds property effects for each argument in the method signature (and\n * optionally, for the method name if `dynamic` is true) that calls the\n * provided effect function.\n *\n * @param {Element | Object} model Prototype or instance\n * @param {!MethodSignature} sig Method signature metadata\n * @param {string} type Type of property effect to add\n * @param {Function} effectFn Function to run when arguments change\n * @param {*=} methodInfo Effect-specific information to be included in\n *   method effect metadata\n * @param {boolean|Object=} dynamicFn Boolean or object map indicating whether\n *   method names should be included as a dependency to the effect. Note,\n *   defaults to true if the signature is static (sig.static is true).\n * @private\n */\nexport function createMethodEffect (model, sig, type, effectFn, methodInfo, dynamicFn) {\n  dynamicFn = sig.static || (dynamicFn &&\n    (typeof dynamicFn !== 'object' || dynamicFn[sig.methodName]));\n  let info = {\n    methodName: sig.methodName,\n    args: sig.args,\n    methodInfo,\n    dynamicFn\n  };\n  for (let i = 0, arg; (i < sig.args.length) && (arg = sig.args[i]); i++) {\n    if (!arg.literal) {\n      model._addPropertyEffect(arg.rootProperty, type, {\n        fn: effectFn, info: info, trigger: arg\n      });\n    }\n  }\n  if (dynamicFn) {\n    model._addPropertyEffect(sig.methodName, type, {\n      fn: effectFn, info: info\n    });\n  }\n}\n\n/**\n * Calls a method with arguments marshaled from properties on the instance\n * based on the method signature contained in the effect metadata.\n *\n * Multi-property observers, computed properties, and inline computing\n * functions call this function to invoke the method, then use the return\n * value accordingly.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @return {*} Returns the return value from the method invocation\n * @private\n */\nexport function runMethodEffect (inst, property, props, oldProps, info) {\n  // Instances can optionally have a _methodHost which allows redirecting where\n  // to find methods. Currently used by `templatize`.\n  let context = inst._methodHost || inst;\n  let fn = context[info.methodName];\n  if (fn) {\n    let args = marshalArgs(inst.__data, info.args, property, props);\n    return fn.apply(context, args);\n  } else if (!info.dynamicFn) {\n    console.warn('method `' + info.methodName + '` not defined');\n  }\n}\n\n/**\n * Gather the argument values for a method specified in the provided array\n * of argument metadata.\n *\n * The `path` and `value` arguments are used to fill in wildcard descriptor\n * when the method is being called as a result of a path notification.\n *\n * @param {Object} data Instance data storage object to read properties from\n * @param {!Array<!MethodArg>} args Array of argument metadata\n * @param {string} path Property/path name that triggered the method effect\n * @param {Object} props Bag of current property changes\n * @return {Array<*>} Array of argument values\n * @private\n */\nexport function marshalArgs (data, args, path, props) {\n  let values = [];\n  for (let i = 0, l = args.length; i < l; i++) {\n    let arg = args[i];\n    let name = arg.name;\n    let v;\n    if (arg.literal) {\n      v = arg.value;\n    } else {\n      if (arg.structured) {\n        v = get$0(data, name);\n        // when data is not stored e.g. `splices`\n        if (v === undefined) {\n          v = props[name];\n        }\n      } else {\n        v = data[name];\n      }\n    }\n    if (arg.wildcard) {\n      // Only send the actual path changed info if the change that\n      // caused the observer to run matched the wildcard\n      let baseChanged = (name.indexOf(path + '.') === 0);\n      let matches = (path.indexOf(name) === 0 && !baseChanged);\n      values[i] = {\n        path: matches ? path : name,\n        value: matches ? props[path] : v,\n        base: v\n      };\n    } else {\n      values[i] = v;\n    }\n  }\n  return values;\n}\n\n/**\n * Parses an expression string for a method signature, and returns a metadata\n * describing the method in terms of `methodName`, `static` (whether all the\n * arguments are literals), and an array of `args`\n *\n * @param {string} expression The expression to parse\n * @return {?MethodSignature} The method metadata object if a method expression was\n *   found, otherwise `undefined`\n * @private\n */\nexport function parseMethod (expression) {\n  // tries to match valid javascript property names\n  let m = expression.match(/([^\\s]+?)\\(([\\s\\S]*)\\)/);\n  if (m) {\n    let methodName = m[1];\n    let sig = { methodName, static: true, args: emptyArray };\n    if (m[2].trim()) {\n      // replace escaped commas with comma entity, split on un-escaped commas\n      let args = m[2].replace(/\\\\,/g, '&comma;').split(',');\n      return parseArgs(args, sig);\n    } else {\n      return sig;\n    }\n  }\n  return null;\n}\n\n/**\n * Parses an array of arguments and sets the `args` property of the supplied\n * signature metadata object. Sets the `static` property to false if any\n * argument is a non-literal.\n *\n * @param {!Array<string>} argList Array of argument names\n * @param {!MethodSignature} sig Method signature metadata object\n * @return {!MethodSignature} The updated signature metadata object\n * @private\n */\nexport function parseArgs (argList, sig) {\n  sig.args = argList.map(function (rawArg) {\n    let arg = parseArg(rawArg);\n    if (!arg.literal) {\n      sig.static = false;\n    }\n    return arg;\n  }, this);\n  return sig;\n}\n\n/**\n * Parses an individual argument, and returns an argument metadata object\n * with the following fields:\n *\n *   {\n *     value: 'prop',        // property/path or literal value\n *     literal: false,       // whether argument is a literal\n *     structured: false,    // whether the property is a path\n *     rootProperty: 'prop', // the root property of the path\n *     wildcard: false       // whether the argument was a wildcard '.*' path\n *   }\n *\n * @param {string} rawArg The string value of the argument\n * @return {!MethodArg} Argument metadata object\n * @private\n */\nexport function parseArg (rawArg) {\n  // clean up whitespace\n  let arg = rawArg.trim()\n    // replace comma entity with comma\n    .replace(/&comma;/g, ',')\n    // repair extra escape sequences; note only commas strictly need\n    // escaping, but we allow any other char to be escaped since its\n    // likely users will do this\n    .replace(/\\\\(.)/g, '\\$1') // eslint-disable-line no-useless-escape\n    ;\n  // basic argument descriptor\n  let a = {\n    name: arg,\n    value: '',\n    literal: false\n  };\n  // detect literal value (must be String or Number)\n  let fc = arg[0];\n  if (fc === '-') {\n    fc = arg[1];\n  }\n  if (fc >= '0' && fc <= '9') {\n    fc = '#';\n  }\n  switch (fc) {\n    case \"'\":\n    case '\"':\n      a.value = arg.slice(1, -1);\n      a.literal = true;\n      break;\n    case '#':\n      a.value = Number(arg);\n      a.literal = true;\n      break;\n  }\n  // if not literal, look for structured path\n  if (!a.literal) {\n    a.rootProperty = root$0(arg);\n    // detect structured path (has dots)\n    a.structured = isPath$0(arg);\n    if (a.structured) {\n      a.wildcard = (arg.slice(-2) === '.*');\n      if (a.wildcard) {\n        a.name = arg.slice(0, -2);\n      }\n    }\n  }\n  return a;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../src/core/utils/effects.js","import './boot.js';\nimport { pathFromUrl } from './resolve-url.js';\n\n/**\n * Legacy settings.\n * @namespace\n * @memberof Polymer\n */\nconst settings = undefined || {};\nexport const useShadow = !(window.ShadyDOM);\nexport const useNativeCSSProperties = Boolean(!window.ShadyCSS || window.ShadyCSS.nativeCss);\nexport const useNativeCustomElements = !(window.customElements.polyfillWrapFlushCallback);\nexport { settings as Settings };\n\n/**\n * Globally settable property that is automatically assigned to\n * `Polymer.ElementMixin` instances, useful for binding in templates to\n * make URL's relative to an application's root.  Defaults to the main\n * document URL, but can be overridden by users.  It may be useful to set\n * `Polymer.rootPath` to provide a stable application mount path when\n * using client side routing.\n *\n * @memberof Polymer\n */\nlet rootPath = undefined ||\n  pathFromUrl(document.baseURI || window.location.href);\n\nexport { rootPath };\n\nexport const setRootPath = function(path) {\n  rootPath = path;\n};\n\n/**\n * A global callback used to sanitize any value before inserting it into the DOM. The callback signature is:\n *\n *     Polymer = {\n *       sanitizeDOMValue: function(value, name, type, node) { ... }\n *     }\n *\n * Where:\n *\n * `value` is the value to sanitize.\n * `name` is the name of an attribute or property (for example, href).\n * `type` indicates where the value is being inserted: one of property, attribute, or text.\n * `node` is the node where the value is being inserted.\n *\n * @type {(function(*,string,string,Node):*)|undefined}\n * @memberof Polymer\n */\nlet sanitizeDOMValue = undefined;\n\nexport { sanitizeDOMValue };\n\nexport const setSanitizeDOMValue = function(newSanitizeDOMValue) {\n  sanitizeDOMValue = newSanitizeDOMValue;\n};\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@polymer/polymer/lib/utils/settings.js","// data api\n\n/**\n * Sends array splice notifications (`.splices` and `.length`)\n *\n * Note: this implementation only accepts normalized paths\n *\n * @param {!PropertyEffectsType} inst Instance to send notifications to\n * @param {Array} array The array the mutations occurred on\n * @param {string} path The path to the array that was mutated\n * @param {Array} splices Array of splice records\n * @private\n */\nexport function notifySplices (inst, array, path, splices) {\n  let splicesPath = path + '.splices';\n  inst.notifyPath(splicesPath, { indexSplices: splices });\n  inst.notifyPath(path + '.length', array.length);\n  // Null here to allow potentially large splice records to be GC'ed.\n  inst.__data[splicesPath] = {indexSplices: null};\n}\n\n/**\n * Creates a splice record and sends an array splice notification for\n * the described mutation\n *\n * Note: this implementation only accepts normalized paths\n *\n * @param {!PropertyEffectsType} inst Instance to send notifications to\n * @param {Array} array The array the mutations occurred on\n * @param {string} path The path to the array that was mutated\n * @param {number} index Index at which the array mutation occurred\n * @param {number} addedCount Number of added items\n * @param {Array} removed Array of removed items\n * @private\n */\nexport function notifySplice (inst, array, path, index, addedCount, removed) {\n  notifySplices(inst, array, path, [{\n    index: index,\n    addedCount: addedCount,\n    removed: removed,\n    object: array,\n    type: 'splice'\n  }]);\n}\n\n/**\n * Returns an upper-cased version of the string.\n *\n * @param {string} name String to uppercase\n * @return {string} Uppercased string\n * @private\n */\nexport function upper (name) {\n  return name[0].toUpperCase() + name.substring(1);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../src/core/utils/data-api.js","import './boot.js';\nimport { calculateSplices } from './array-splice.js';\nimport { microTask } from './async.js';\n\n/**\n * Returns true if `node` is a slot element\n * @param {HTMLElement} node Node to test.\n * @return {boolean} Returns true if the given `node` is a slot\n * @private\n */\nfunction isSlot(node) {\n  return (node.localName === 'slot');\n}\n\n/**\n * Class that listens for changes (additions or removals) to\n * \"flattened nodes\" on a given `node`. The list of flattened nodes consists\n * of a node's children and, for any children that are `<slot>` elements,\n * the expanded flattened list of `assignedNodes`.\n * For example, if the observed node has children `<a></a><slot></slot><b></b>`\n * and the `<slot>` has one `<div>` assigned to it, then the flattened\n * nodes list is `<a></a><div></div><b></b>`. If the `<slot>` has other\n * `<slot>` elements assigned to it, these are flattened as well.\n *\n * The provided `callback` is called whenever any change to this list\n * of flattened nodes occurs, where an addition or removal of a node is\n * considered a change. The `callback` is called with one argument, an object\n * containing an array of any `addedNodes` and `removedNodes`.\n *\n * Note: the callback is called asynchronous to any changes\n * at a microtask checkpoint. This is because observation is performed using\n * `MutationObserver` and the `<slot>` element's `slotchange` event which\n * are asynchronous.\n *\n * @memberof Polymer\n * @summary Class that listens for changes (additions or removals) to\n * \"flattened nodes\" on a given `node`.\n */\nclass FlattenedNodesObserver {\n\n  /**\n   * Returns the list of flattened nodes for the given `node`.\n   * This list consists of a node's children and, for any children\n   * that are `<slot>` elements, the expanded flattened list of `assignedNodes`.\n   * For example, if the observed node has children `<a></a><slot></slot><b></b>`\n   * and the `<slot>` has one `<div>` assigned to it, then the flattened\n   * nodes list is `<a></a><div></div><b></b>`. If the `<slot>` has other\n   * `<slot>` elements assigned to it, these are flattened as well.\n   *\n   * @param {HTMLElement|HTMLSlotElement} node The node for which to return the list of flattened nodes.\n   * @return {Array} The list of flattened nodes for the given `node`.\n  */\n  static getFlattenedNodes(node) {\n    if (isSlot(node)) {\n      return /** @type {HTMLSlotElement} */ (node).assignedNodes({flatten: true});\n    } else {\n      return Array.from(node.childNodes).map(node => {\n        if (isSlot(node)) {\n          return /** @type {HTMLSlotElement} */ (node).assignedNodes({flatten: true});\n        } else {\n          return [node];\n        }\n      }).reduce((a, b) => a.concat(b), []);\n    }\n  }\n\n  /**\n   * @param {Node} target Node on which to listen for changes.\n   * @param {Function} callback Function called when there are additions\n   * or removals from the target's list of flattened nodes.\n  */\n  constructor(target, callback) {\n    /** @type {MutationObserver} */\n    this._shadyChildrenObserver = null;\n    /** @type {MutationObserver} */\n    this._nativeChildrenObserver = null;\n    this._connected = false;\n    this._target = target;\n    this.callback = callback;\n    this._effectiveNodes = [];\n    this._observer = null;\n    this._scheduled = false;\n    /** @type {function()} */\n    this._boundSchedule = () => {\n      this._schedule();\n    };\n    this.connect();\n    this._schedule();\n  }\n\n  /**\n   * Activates an observer. This method is automatically called when\n   * a `FlattenedNodesObserver` is created. It should only be called to\n   * re-activate an observer that has been deactivated via the `disconnect` method.\n   */\n  connect() {\n    if (isSlot(this._target)) {\n      this._listenSlots([this._target]);\n    } else {\n      this._listenSlots(this._target.children);\n      if (window.ShadyDOM) {\n        this._shadyChildrenObserver =\n          ShadyDOM.observeChildren(this._target, (mutations) => {\n            this._processMutations(mutations);\n          });\n      } else {\n        this._nativeChildrenObserver =\n          new MutationObserver((mutations) => {\n            this._processMutations(mutations);\n          });\n        this._nativeChildrenObserver.observe(this._target, {childList: true});\n      }\n    }\n    this._connected = true;\n  }\n\n  /**\n   * Deactivates the flattened nodes observer. After calling this method\n   * the observer callback will not be called when changes to flattened nodes\n   * occur. The `connect` method may be subsequently called to reactivate\n   * the observer.\n   */\n  disconnect() {\n    if (isSlot(this._target)) {\n      this._unlistenSlots([this._target]);\n    } else {\n      this._unlistenSlots(this._target.children);\n      if (window.ShadyDOM && this._shadyChildrenObserver) {\n        ShadyDOM.unobserveChildren(this._shadyChildrenObserver);\n        this._shadyChildrenObserver = null;\n      } else if (this._nativeChildrenObserver) {\n        this._nativeChildrenObserver.disconnect();\n        this._nativeChildrenObserver = null;\n      }\n    }\n    this._connected = false;\n  }\n\n  _schedule() {\n    if (!this._scheduled) {\n      this._scheduled = true;\n      microTask.run(() => this.flush());\n    }\n  }\n\n  _processMutations(mutations) {\n    this._processSlotMutations(mutations);\n    this.flush();\n  }\n\n  _processSlotMutations(mutations) {\n    if (mutations) {\n      for (let i=0; i < mutations.length; i++) {\n        let mutation = mutations[i];\n        if (mutation.addedNodes) {\n          this._listenSlots(mutation.addedNodes);\n        }\n        if (mutation.removedNodes) {\n          this._unlistenSlots(mutation.removedNodes);\n        }\n      }\n    }\n  }\n\n  /**\n   * Flushes the observer causing any pending changes to be immediately\n   * delivered the observer callback. By default these changes are delivered\n   * asynchronously at the next microtask checkpoint.\n   *\n   * @return {boolean} Returns true if any pending changes caused the observer\n   * callback to run.\n   */\n  flush() {\n    if (!this._connected) {\n      return false;\n    }\n    if (window.ShadyDOM) {\n      ShadyDOM.flush();\n    }\n    if (this._nativeChildrenObserver) {\n      this._processSlotMutations(this._nativeChildrenObserver.takeRecords());\n    } else if (this._shadyChildrenObserver) {\n      this._processSlotMutations(this._shadyChildrenObserver.takeRecords());\n    }\n    this._scheduled = false;\n    let info = {\n      target: this._target,\n      addedNodes: [],\n      removedNodes: []\n    };\n    let newNodes = this.constructor.getFlattenedNodes(this._target);\n    let splices = calculateSplices(newNodes,\n      this._effectiveNodes);\n    // process removals\n    for (let i=0, s; (i<splices.length) && (s=splices[i]); i++) {\n      for (let j=0, n; (j < s.removed.length) && (n=s.removed[j]); j++) {\n        info.removedNodes.push(n);\n      }\n    }\n    // process adds\n    for (let i=0, s; (i<splices.length) && (s=splices[i]); i++) {\n      for (let j=s.index; j < s.index + s.addedCount; j++) {\n        info.addedNodes.push(newNodes[j]);\n      }\n    }\n    // update cache\n    this._effectiveNodes = newNodes;\n    let didFlush = false;\n    if (info.addedNodes.length || info.removedNodes.length) {\n      didFlush = true;\n      this.callback.call(this._target, info);\n    }\n    return didFlush;\n  }\n\n  _listenSlots(nodeList) {\n    for (let i=0; i < nodeList.length; i++) {\n      let n = nodeList[i];\n      if (isSlot(n)) {\n        n.addEventListener('slotchange', this._boundSchedule);\n      }\n    }\n  }\n\n  _unlistenSlots(nodeList) {\n    for (let i=0; i < nodeList.length; i++) {\n      let n = nodeList[i];\n      if (isSlot(n)) {\n        n.removeEventListener('slotchange', this._boundSchedule);\n      }\n    }\n  }\n\n}\n\nexport { FlattenedNodesObserver };\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@polymer/polymer/lib/utils/flattened-nodes-observer.js","import './boot.js';\n\nfunction newSplice(index, removed, addedCount) {\n  return {\n    index: index,\n    removed: removed,\n    addedCount: addedCount\n  };\n}\n\nconst EDIT_LEAVE = 0;\nconst EDIT_UPDATE = 1;\nconst EDIT_ADD = 2;\nconst EDIT_DELETE = 3;\n\n// Note: This function is *based* on the computation of the Levenshtein\n// \"edit\" distance. The one change is that \"updates\" are treated as two\n// edits - not one. With Array splices, an update is really a delete\n// followed by an add. By retaining this, we optimize for \"keeping\" the\n// maximum array items in the original array. For example:\n//\n//   'xxxx123' -> '123yyyy'\n//\n// With 1-edit updates, the shortest path would be just to update all seven\n// characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\n// leaves the substring '123' intact.\nfunction calcEditDistances(current, currentStart, currentEnd,\n                            old, oldStart, oldEnd) {\n  // \"Deletion\" columns\n  let rowCount = oldEnd - oldStart + 1;\n  let columnCount = currentEnd - currentStart + 1;\n  let distances = new Array(rowCount);\n\n  // \"Addition\" rows. Initialize null column.\n  for (let i = 0; i < rowCount; i++) {\n    distances[i] = new Array(columnCount);\n    distances[i][0] = i;\n  }\n\n  // Initialize null row\n  for (let j = 0; j < columnCount; j++)\n    distances[0][j] = j;\n\n  for (let i = 1; i < rowCount; i++) {\n    for (let j = 1; j < columnCount; j++) {\n      if (equals(current[currentStart + j - 1], old[oldStart + i - 1]))\n        distances[i][j] = distances[i - 1][j - 1];\n      else {\n        let north = distances[i - 1][j] + 1;\n        let west = distances[i][j - 1] + 1;\n        distances[i][j] = north < west ? north : west;\n      }\n    }\n  }\n\n  return distances;\n}\n\n// This starts at the final weight, and walks \"backward\" by finding\n// the minimum previous weight recursively until the origin of the weight\n// matrix.\nfunction spliceOperationsFromEditDistances(distances) {\n  let i = distances.length - 1;\n  let j = distances[0].length - 1;\n  let current = distances[i][j];\n  let edits = [];\n  while (i > 0 || j > 0) {\n    if (i == 0) {\n      edits.push(EDIT_ADD);\n      j--;\n      continue;\n    }\n    if (j == 0) {\n      edits.push(EDIT_DELETE);\n      i--;\n      continue;\n    }\n    let northWest = distances[i - 1][j - 1];\n    let west = distances[i - 1][j];\n    let north = distances[i][j - 1];\n\n    let min;\n    if (west < north)\n      min = west < northWest ? west : northWest;\n    else\n      min = north < northWest ? north : northWest;\n\n    if (min == northWest) {\n      if (northWest == current) {\n        edits.push(EDIT_LEAVE);\n      } else {\n        edits.push(EDIT_UPDATE);\n        current = northWest;\n      }\n      i--;\n      j--;\n    } else if (min == west) {\n      edits.push(EDIT_DELETE);\n      i--;\n      current = west;\n    } else {\n      edits.push(EDIT_ADD);\n      j--;\n      current = north;\n    }\n  }\n\n  edits.reverse();\n  return edits;\n}\n\n/**\n * Splice Projection functions:\n *\n * A splice map is a representation of how a previous array of items\n * was transformed into a new array of items. Conceptually it is a list of\n * tuples of\n *\n *   <index, removed, addedCount>\n *\n * which are kept in ascending index order of. The tuple represents that at\n * the |index|, |removed| sequence of items were removed, and counting forward\n * from |index|, |addedCount| items were added.\n */\n\n/**\n * Lacking individual splice mutation information, the minimal set of\n * splices can be synthesized given the previous state and final state of an\n * array. The basic approach is to calculate the edit distance matrix and\n * choose the shortest path through it.\n *\n * Complexity: O(l * p)\n *   l: The length of the current array\n *   p: The length of the old array\n *\n * @param {Array} current The current \"changed\" array for which to\n * calculate splices.\n * @param {number} currentStart Starting index in the `current` array for\n * which splices are calculated.\n * @param {number} currentEnd Ending index in the `current` array for\n * which splices are calculated.\n * @param {Array} old The original \"unchanged\" array to compare `current`\n * against to determine splices.\n * @param {number} oldStart Starting index in the `old` array for\n * which splices are calculated.\n * @param {number} oldEnd Ending index in the `old` array for\n * which splices are calculated.\n * @return {Array} Returns an array of splice record objects. Each of these\n * contains: `index` the location where the splice occurred; `removed`\n * the array of removed items from this location; `addedCount` the number\n * of items added at this location.\n */\nfunction calcSplices(current, currentStart, currentEnd,\n                      old, oldStart, oldEnd) {\n  let prefixCount = 0;\n  let suffixCount = 0;\n  let splice;\n\n  let minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n  if (currentStart == 0 && oldStart == 0)\n    prefixCount = sharedPrefix(current, old, minLength);\n\n  if (currentEnd == current.length && oldEnd == old.length)\n    suffixCount = sharedSuffix(current, old, minLength - prefixCount);\n\n  currentStart += prefixCount;\n  oldStart += prefixCount;\n  currentEnd -= suffixCount;\n  oldEnd -= suffixCount;\n\n  if (currentEnd - currentStart == 0 && oldEnd - oldStart == 0)\n    return [];\n\n  if (currentStart == currentEnd) {\n    splice = newSplice(currentStart, [], 0);\n    while (oldStart < oldEnd)\n      splice.removed.push(old[oldStart++]);\n\n    return [ splice ];\n  } else if (oldStart == oldEnd)\n    return [ newSplice(currentStart, [], currentEnd - currentStart) ];\n\n  let ops = spliceOperationsFromEditDistances(\n      calcEditDistances(current, currentStart, currentEnd,\n                             old, oldStart, oldEnd));\n\n  splice = undefined;\n  let splices = [];\n  let index = currentStart;\n  let oldIndex = oldStart;\n  for (let i = 0; i < ops.length; i++) {\n    switch(ops[i]) {\n      case EDIT_LEAVE:\n        if (splice) {\n          splices.push(splice);\n          splice = undefined;\n        }\n\n        index++;\n        oldIndex++;\n        break;\n      case EDIT_UPDATE:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.addedCount++;\n        index++;\n\n        splice.removed.push(old[oldIndex]);\n        oldIndex++;\n        break;\n      case EDIT_ADD:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.addedCount++;\n        index++;\n        break;\n      case EDIT_DELETE:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.removed.push(old[oldIndex]);\n        oldIndex++;\n        break;\n    }\n  }\n\n  if (splice) {\n    splices.push(splice);\n  }\n  return splices;\n}\n\nfunction sharedPrefix(current, old, searchLength) {\n  for (let i = 0; i < searchLength; i++)\n    if (!equals(current[i], old[i]))\n      return i;\n  return searchLength;\n}\n\nfunction sharedSuffix(current, old, searchLength) {\n  let index1 = current.length;\n  let index2 = old.length;\n  let count = 0;\n  while (count < searchLength && equals(current[--index1], old[--index2]))\n    count++;\n\n  return count;\n}\n\nfunction calculateSplices(current, previous) {\n  return calcSplices(current, 0, current.length, previous, 0,\n                          previous.length);\n}\n\nfunction equals(currentValue, previousValue) {\n  return currentValue === previousValue;\n}\n\nexport { calculateSplices };\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@polymer/polymer/lib/utils/array-splice.js","import { resolveUrl } from '@polymer/polymer/lib/utils/resolve-url';\nimport { reducers, store, ReduxMixin } from '../components/state-manager/index';\nimport { combineReducers } from 'redux';\n\nconst LOCATION_ACTION = {\n  PATH: 'LOCATION_UPDATE_PATH',\n  QUERY: 'LOCATION_UPDATE_QUERY',\n  HASH: 'LOCATION_UPDATE_HASH',\n  UPDATE: 'LOCATION_UPDATE'\n};\n\nreducers.location = (location = {}, action) => {\n  switch (action.type) {\n    case LOCATION_ACTION.PATH:\n      return Object.assign({}, location, {\n        path: action.path\n      });\n    case LOCATION_ACTION.QUERY:\n      return Object.assign({}, location, {\n        query: action.query\n      });\n    case LOCATION_ACTION.HASH:\n      return Object.assign({}, location, {\n        hash: action.query\n      });\n    case LOCATION_ACTION.UPDATE:\n      window.history.pushState({}, action.title || '', action.location || '/');\n      window.dispatchEvent(new window.CustomEvent('location-changed'));\n      return location;\n    default:\n      return location;\n  }\n};\n\nstore.replaceReducer(combineReducers(reducers));\n\nexport { LOCATION_ACTION };\n\nexport default (superClass) => {\n  return class extends ReduxMixin(superClass) {\n    static get properties () {\n      return {\n        // location-mixin\n        path: {\n          type: String,\n          observer: '_pathChanged',\n          statePath: 'location.path'\n        },\n\n        query: {\n          type: String,\n          observer: '_queryChanged',\n          statePath: 'location.query'\n        },\n\n        urlSpaceRegex: {\n          type: String\n        },\n\n        hash: {\n          type: String,\n          statePath: 'location.hash'\n        },\n\n        dwellTime: {\n          type: Number\n        },\n\n        _urlSpaceRegExp: {\n          type: String,\n          computed: '_makeRegExp(urlSpaceRegex)'\n        },\n\n        _lastChangedAt: {\n          type: String\n        },\n\n        _initialized: {\n          type: Boolean\n        }\n      };\n    }\n\n    constructor () {\n      super();\n      this._boundHashChanged = this._hashChanged.bind(this);\n      this._boundUrlChanged = this._urlChanged.bind(this);\n      this._boundGlobalOnClick = this._globalOnClick.bind(this);\n    }\n\n    connectedCallback () {\n      if (super.disconnectedCallback) {\n        super.connectedCallback();\n      }\n      window.addEventListener('hashchange', this._boundHashChanged);\n      window.addEventListener('location-changed', this._boundUrlChanged);\n      window.addEventListener('popstate', this._boundUrlChanged);\n      document.body.addEventListener('click', this._boundGlobalOnClick, true);\n      this._lastChangedAt = window.performance.now() - (this.dwellTime - 200);\n      this._initialized = true;\n\n      // set initialize values\n      // this.path = window.decodeURIComponent(window.location.pathname);\n      // this.query = window.location.search.slice(1);\n      // this.hash = window.decodeURIComponent(window.location.hash.slice(1));\n      this.dwellTime = 2000;\n      this._initialized = false;\n      this._urlChanged();\n    }\n\n    disconnectedCallback () {\n      if (super.disconnectedCallback) {\n        super.disconnectedCallback();\n      }\n      window.removeEventListener('hashchange', this._boundHashChanged);\n      window.removeEventListener('location-changed', this._boundUrlChanged);\n      window.removeEventListener('popstate', this._boundUrlChanged);\n      document.body.removeEventListener('click', this._boundGlobalOnClick);\n      this._initialized = false;\n    }\n\n    _pathChanged (path) {}\n\n    _queryChanged (query) {}\n\n    _hashChanged () {\n      this.dispatch({\n        type: LOCATION_ACTION.HASH,\n        path: window.decodeURIComponent(window.location.hash.substring(1))\n      });\n      // this.hash = window.decodeURIComponent(window.location.hash.substring(1));\n    }\n\n    _urlChanged () {\n      // We want to extract all info out of the updated URL before we\n      // try to write anything back into it.\n      //\n      // i.e. without _dontUpdateUrl we'd overwrite the new path with the old\n      // one when we set this.hash. Likewise for query.\n      this._dontUpdateUrl = true;\n      this._hashChanged();\n\n      this.dispatch({\n        type: LOCATION_ACTION.PATH,\n        path: window.decodeURIComponent(window.location.pathname)\n      });\n\n      this.dispatch({\n        type: LOCATION_ACTION.QUERY,\n        query: window.location.search.substring(1)\n      });\n\n      // this.path =\n      // this.query =\n      this._dontUpdateUrl = false;\n      this._updateUrl();\n    }\n\n    _getUrl () {\n      var partiallyEncodedPath = window.encodeURI(this.path).replace(/\\#/g, '%23').replace(/\\?/g, '%3F'); // eslint-disable-line no-useless-escape\n      var partiallyEncodedQuery = '';\n      if (this.query) {\n        partiallyEncodedQuery = '?' + this.query.replace(/\\#/g, '%23'); // eslint-disable-line no-useless-escape\n      }\n      var partiallyEncodedHash = '';\n      if (this.hash) {\n        partiallyEncodedHash = '#' + window.encodeURI(this.hash);\n      }\n      return (partiallyEncodedPath + partiallyEncodedQuery + partiallyEncodedHash);\n    }\n\n    _updateUrl () {\n      if (this._dontUpdateUrl || !this._initialized) {\n        return;\n      }\n\n      if (this.path === window.decodeURIComponent(window.location.pathname) &&\n          this.query === window.location.search.substring(1) &&\n          this.hash === window.decodeURIComponent(window.location.hash.substring(1))) {\n        // Nothing to do, the current URL is a representation of our properties.\n        return;\n      }\n      var newUrl = this._getUrl();\n      // Need to use a full URL in case the containing page has a base URI.\n      var fullNewUrl = resolveUrl(newUrl, window.location.protocol + '//' + window.location.host).href;\n      var now = window.performance.now();\n      var shouldReplace = this._lastChangedAt + this.dwellTime > now;\n      this._lastChangedAt = now;\n      if (shouldReplace) {\n        window.history.replaceState({}, '', fullNewUrl);\n      } else {\n        window.history.pushState({}, '', fullNewUrl);\n      }\n      window.dispatchEvent(new window.CustomEvent('location-changed'));\n    }\n\n    /**\n     * A necessary evil so that links work as expected. Does its best to\n     * bail out early if possible.\n     *\n     * @param {MouseEvent} event .\n     */\n    _globalOnClick (event) {\n      // If another event handler has stopped this event then there's nothing\n      // for us to do. This can happen e.g. when there are multiple\n      // iron-location elements in a page.\n      if (event.defaultPrevented) {\n        return;\n      }\n      var href = this._getSameOriginLinkHref(event);\n      if (!href) {\n        return;\n      }\n      event.preventDefault();\n      // If the navigation is to the current page we shouldn't add a history\n      // entry or fire a change event.\n      if (href === window.location.href) {\n        return;\n      }\n      window.history.pushState({}, '', href);\n      window.dispatchEvent(new window.CustomEvent('location-changed'));\n    }\n\n    /**\n     * Returns the absolute URL of the link (if any) that this click event\n     * is clicking on, if we can and should override the resulting full\n     * page navigation. Returns null otherwise.\n     *\n     * @param {MouseEvent} event .\n     * @return {string?} .\n     */\n    _getSameOriginLinkHref (event) {\n      // We only care about left-clicks.\n      if (event.button !== 0) {\n        return null;\n      }\n      // We don't want modified clicks, where the intent is to open the page\n      // in a new tab.\n      if (event.metaKey || event.ctrlKey) {\n        return null;\n      }\n      var eventPath = event.composedPath();\n      var anchor = null;\n      for (var i = 0; i < eventPath.length; i++) {\n        var element = eventPath[i];\n        if (element.tagName === 'A' && element.href) {\n          anchor = element;\n          break;\n        }\n      }\n      // If there's no link there's nothing to do.\n      if (!anchor) {\n        return null;\n      }\n      // Target blank is a new tab, don't intercept.\n      if (anchor.target === '_blank') {\n        // capture link click\n        if (anchor.href && window.ga) {\n          window.ga('send', 'event', 'Link', 'Click', anchor.href, 1);\n        }\n        return null;\n      }\n      // If the link is for an existing parent frame, don't intercept.\n      if ((anchor.target === '_top' ||\n          anchor.target === '_parent') &&\n          window.top !== window) {\n        return null;\n      }\n      var href = anchor.href;\n      // It only makes sense for us to intercept same-origin navigations.\n      // pushState/replaceState don't work with cross-origin links.\n      var url;\n      if (document.baseURI != null) {\n        url = resolveUrl(href, /** @type {string} */(document.baseURI));\n      } else {\n        url = resolveUrl(href);\n      }\n      var origin;\n      // IE Polyfill\n      if (window.location.origin) {\n        origin = window.location.origin;\n      } else {\n        origin = window.location.protocol + '//' + window.location.host;\n      }\n      var urlOrigin;\n      if (url.origin) {\n        urlOrigin = url.origin;\n      } else {\n        urlOrigin = url.protocol + '//' + url.host;\n      }\n      if (urlOrigin !== origin) {\n        return null;\n      }\n      var normalizedHref = url.pathname + url.search + url.hash;\n      // pathname should start with '/', but may not if `new URL` is not supported\n      if (normalizedHref[0] !== '/') {\n        normalizedHref = '/' + normalizedHref;\n      }\n      // If we've been configured not to handle this url... don't handle it!\n      if (this._urlSpaceRegExp &&\n          !this._urlSpaceRegExp.test(normalizedHref)) {\n        return null;\n      }\n      // Need to use a full URL in case the containing page has a base URI.\n      var fullNormalizedHref = resolveUrl(normalizedHref, window.location.href).href;\n      return fullNormalizedHref;\n    }\n\n    _makeRegExp (urlSpaceRegex) {\n      return RegExp(urlSpaceRegex);\n    }\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ../src/core/mixins/location-mixin.js","import { reducers, store, ReduxMixin } from '../components/state-manager/index';\nimport { combineReducers } from 'redux';\n\nconst QUERYPARAMS_ACTION = {\n  UPDATE: 'QUERYPARAMS_UPDATE'\n};\n\nreducers.query = (query = {}, action) => {\n  switch (action.type) {\n    case QUERYPARAMS_ACTION.UPDATE:\n      return Object.assign({}, query, {\n        params: action.params\n      });\n    default:\n      return query;\n  }\n};\n\nstore.replaceReducer(combineReducers(reducers));\n\nexport { QUERYPARAMS_ACTION };\n\nexport default (superClass) => {\n  return class extends ReduxMixin(superClass) {\n    static get properties () {\n      return {\n        // query params 'paramsString', 'paramsObject', '_dontReact'\n        paramsString: {\n          type: String,\n          observer: '_paramsStringChanged'\n        },\n\n        paramsObject: {\n          type: Object,\n          statePath: 'query.params'\n        },\n\n        _dontReact: {\n          type: Boolean\n        }\n      };\n    }\n\n    connectedCallback () {\n      if (super.connectedCallback) {\n        super.connectedCallback();\n      }\n\n      // initialize values\n      this.paramsObject = {};\n      this._dontReact = false;\n    }\n\n    _queryChanged (query) {\n      this.paramsString = query;\n    }\n\n    _paramsStringChanged () {\n      this._dontReact = true;\n      this.dispatch({\n        type: QUERYPARAMS_ACTION.UPDATE,\n        params: this._decodeParams(this.paramsString)\n      });\n\n      // this.paramsObject =\n      this._dontReact = false;\n    }\n\n    paramsObjectChanged () {\n      if (this._dontReact) {\n        return;\n      }\n      this.paramsString = this._encodeParams(this.paramsObject)\n        .replace(/%3F/g, '?').replace(/%2F/g, '/').replace(/'/g, '%27');\n    }\n\n    _encodeParams (params) {\n      var encodedParams = [];\n      for (var key in params) {\n        var value = params[key];\n        if (value === '') {\n          encodedParams.push(encodeURIComponent(key));\n        } else if (value) {\n          encodedParams.push(\n            encodeURIComponent(key) +\n            '=' +\n            encodeURIComponent(value.toString())\n          );\n        }\n      }\n      return encodedParams.join('&');\n    }\n\n    _decodeParams (paramString) {\n      var params = {};\n      // Work around a bug in decodeURIComponent where + is not\n      // converted to spaces:\n      paramString = (paramString || '').replace(/\\+/g, '%20');\n      var paramList = paramString.split('&');\n      for (var i = 0; i < paramList.length; i++) {\n        var param = paramList[i].split('=');\n        if (param[0]) {\n          params[decodeURIComponent(param[0])] =\n              decodeURIComponent(param[1] || '');\n        }\n      }\n      return params;\n    }\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ../src/core/mixins/query-params-mixin.js","/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\"]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined]\n  '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = (options && options.delimiter) || '/'\n  var delimiters = (options && options.delimiters) || './'\n  var pathEscaped = false\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      pathEscaped = true\n      continue\n    }\n\n    var prev = ''\n    var next = str[index]\n    var name = res[2]\n    var capture = res[3]\n    var group = res[4]\n    var modifier = res[5]\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1\n\n      if (delimiters.indexOf(path[k]) > -1) {\n        prev = path[k]\n        path = path.slice(0, k)\n      }\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n      pathEscaped = false\n    }\n\n    var partial = prev !== '' && next !== undefined && next !== prev\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = prev || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      pattern: pattern ? escapeGroup(pattern) : '[^' + escapeString(delimiter) + ']+?'\n    })\n  }\n\n  // Push any remaining characters.\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index))\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')\n    }\n  }\n\n  return function (data, options) {\n    var path = ''\n    var encode = (options && options.encode) || encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n        continue\n      }\n\n      var value = data ? data[token.name] : undefined\n      var segment\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue\n\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j])\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value))\n\n        if (!matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"')\n        }\n\n        path += token.prefix + segment\n        continue\n      }\n\n      if (token.optional) {\n        // Prepend partial segment prefixes.\n        if (token.partial) path += token.prefix\n\n        continue\n      }\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'))\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  if (!keys) return path\n\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        pattern: null\n      })\n    }\n  }\n\n  return path\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options))\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  options = options || {}\n\n  var strict = options.strict\n  var end = options.end !== false\n  var delimiter = escapeString(options.delimiter || '/')\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|')\n  var route = ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var prefix = escapeString(token.prefix)\n      var capture = '(?:' + token.pattern + ')'\n\n      if (keys) keys.push(token)\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*'\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?'\n        } else {\n          capture = prefix + '(' + capture + ')?'\n        }\n      } else {\n        capture = prefix + '(' + capture + ')'\n      }\n\n      route += capture\n    }\n  }\n\n  // In non-strict mode we allow a delimiter at the end of a match.\n  if (!strict) {\n    route += '(?:' + delimiter + '(?=' + endsWith + '))?'\n  }\n\n  if (end) {\n    route += endsWith === '$' ? endsWith : '(?=' + endsWith + ')'\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += '(?=' + delimiter + '|' + endsWith + ')'\n  }\n\n  return new RegExp('^' + route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys)\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), keys, options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), keys, options)\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/path-to-regexp/index.js","\n    export default {\n      'landing-page': () => { return import(/* webpackChunkName: \"landing-page\" */ '../../../src/main-module/pages/landing-page') }\n    }\n  \n\n\n// WEBPACK FOOTER //\n// ../src/core/fragments/index.js","const auth = {\n  auth: () => {}\n};\n\nexport default auth;\n\n\n// WEBPACK FOOTER //\n// ../src/authentication/index.js","import { html } from 'lit-html';\nimport style from './style.scss';\n\nexport default () => html`\n  <style is=\"custom-style\">\n    ${style.toString()}\n  </style>\n\n  <div class=\"main\" role=\"main\">\n    <slot></slot>\n  </div>\n`;\n\n\n\n// WEBPACK FOOTER //\n// ../src/core/components/main-router/template.js","\n        var result = require(\"!!../../../../builder/node_modules/css-loader/index.js!../../../../builder/node_modules/sass-loader/lib/loader.js!./style.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ../src/core/components/main-router/style.scss\n// module id = 42\n// module chunks = 1","exports = module.exports = require(\"../../../../builder/node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"div[role='main'] {\\n  position: relative; }\\n\\n::slotted(.page) {\\n  position: absolute;\\n  background-color: white;\\n  top: 0;\\n  opacity: 0;\\n  z-index: -1;\\n  transition: opacity 0.3s;\\n  display: none; }\\n\\n::slotted(*) > .page {\\n  position: absolute;\\n  background-color: white;\\n  top: 0;\\n  opacity: 0;\\n  z-index: -1;\\n  transition: opacity 0.3s;\\n  display: none; }\\n\\n::slotted(.page--on-view) {\\n  position: relative !important;\\n  opacity: 1;\\n  z-index: 0;\\n  display: block; }\\n\\n::slotted(*) > .page--on-view {\\n  position: relative !important;\\n  opacity: 1;\\n  z-index: 0;\\n  display: block; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!../src/core/components/main-router/style.scss\n// module id = 43\n// module chunks = 1","import { createStore } from 'redux';\nimport PolymerRedux from '../../mixins/polymer-redux';\n\nconst reducers = {};\n\nconst initialStore = {};\n\nconst store = createStore((state = initialStore, action) => state);\n\nconst ReduxMixin = PolymerRedux(store);\n\nexport { reducers, store, ReduxMixin };\n\n\n\n// WEBPACK FOOTER //\n// ../src/core/components/state-manager/index.js","import createStore from './createStore';\nimport combineReducers from './combineReducers';\nimport bindActionCreators from './bindActionCreators';\nimport applyMiddleware from './applyMiddleware';\nimport compose from './compose';\nimport warning from './utils/warning';\n\n/*\n* This is a dummy function to check if the function name has been altered by minification.\n* If the function has been minified and NODE_ENV !== 'production', warn the user.\n*/\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { createStore, combineReducers, bindActionCreators, applyMiddleware, compose };\n\n\n// WEBPACK FOOTER //\n// ../node_modules/redux/es/index.js","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/lodash-es/_baseGetTag.js","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/lodash-es/_root.js","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/lodash-es/_freeGlobal.js","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/lodash-es/_getRawTag.js","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/lodash-es/_objectToString.js","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/lodash-es/_getPrototype.js","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/lodash-es/_overArg.js","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/lodash-es/isObjectLike.js","module.exports = require('./lib/index');\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/symbol-observable/index.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ponyfill = require('./ponyfill');\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar root; /* global window */\n\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = (0, _ponyfill2['default'])(root);\nexports['default'] = result;\n\n\n// WEBPACK FOOTER //\n// ../node_modules/symbol-observable/lib/index.js","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// (webpack)/buildin/module.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\t\t\tresult = _Symbol('observable');\n\t\t\t_Symbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n\n// WEBPACK FOOTER //\n// ../node_modules/symbol-observable/lib/ponyfill.js","import { ActionTypes } from './createStore';\nimport isPlainObject from 'lodash-es/isPlainObject';\nimport warning from './utils/warning';\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\n  return 'Given action ' + actionName + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, { type: ActionTypes.INIT });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nexport default function combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning('No reducer provided for key \"' + key + '\"');\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  var unexpectedKeyCache = void 0;\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError = void 0;\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments[1];\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n\n\n// WEBPACK FOOTER //\n// ../node_modules/redux/es/combineReducers.js","function bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(undefined, arguments));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nexport default function bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}\n\n\n// WEBPACK FOOTER //\n// ../node_modules/redux/es/bindActionCreators.js","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport compose from './compose';\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nexport default function applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, preloadedState, enhancer) {\n      var store = createStore(reducer, preloadedState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n\n// WEBPACK FOOTER //\n// ../node_modules/redux/es/applyMiddleware.js","import { get } from '@polymer/polymer/lib/utils/path';\n\n/**\n * Polymer Redux\n *\n * Creates a Class mixin for decorating Elements with a given Redux store.\n *\n * @polymerMixin\n *\n * @param {Object} store Redux store.\n * @return {Function} Class mixin.\n */\nexport default function PolymerRedux (store) {\n  if (!store) {\n    throw new TypeError('PolymerRedux: expecting a redux store.');\n  } else if (!['getState', 'dispatch', 'subscribe'].every(k => typeof store[k] === 'function')) {\n    throw new TypeError('PolymerRedux: invalid store object.');\n  }\n\n  const subscribers = new Map();\n\n  /**\n   * Binds element's properties to state changes from the Redux store.\n   *\n   * @example\n   *     const update = bind(el, props) // set bindings\n   *     update(state) // manual update\n   *\n   * @private\n   * @param {HTMLElement} element\n   * @param {Object} properties\n   * @return {Function} Update function.\n   */\n  const bind = (element, properties) => {\n    const bindings = Object.keys(properties)\n      .filter(name => {\n        const property = properties[name];\n        if (Object.prototype.hasOwnProperty.call(property, 'statePath')) {\n          if (!property.readOnly && property.notify) {\n            console.warn(`PolymerRedux: <${element.constructor.is}>.${name} has \"notify\" enabled, two-way bindings goes against Redux's paradigm`);\n          }\n          return true;\n        }\n        return false;\n      });\n\n    /**\n     * Updates an element's properties with the given state.\n     *\n     * @private\n     * @param {Object} state\n     */\n    const update = state => {\n      let propertiesChanged = false;\n      bindings.forEach(name => { // Perhaps .reduce() to a boolean?\n        const {statePath} = properties[name];\n        const value = (typeof statePath === 'function')\n          ? statePath.call(element, state)\n          : get(state, statePath);\n\n        const changed = element._setPendingPropertyOrPath(name, value, true);\n        propertiesChanged = propertiesChanged || changed;\n      });\n      if (propertiesChanged) {\n        element._invalidateProperties();\n      }\n    };\n\n    // Redux listener\n    const unsubscribe = store.subscribe(() => {\n      const detail = store.getState();\n      update(detail);\n\n      element.dispatchEvent(new window.CustomEvent('state-changed', {detail}));\n    });\n\n    subscribers.set(element, unsubscribe);\n\n    return update(store.getState());\n  };\n\n  /**\n   * Unbinds an element from state changes in the Redux store.\n   *\n   * @private\n   * @param {HTMLElement} element\n   */\n  const unbind = element => {\n    const off = subscribers.get(element);\n    if (typeof off === 'function') {\n      off();\n    }\n  };\n\n  /**\n   * Merges a property's object value using the defaults way.\n   *\n   * @private\n   * @param {Object} what Initial prototype\n   * @param {String} which Property to collect.\n   * @return {Object} the collected values\n   */\n  const collect = (what, which) => {\n    let res = {};\n    while (what) {\n      res = Object.assign({}, what[which], res); // Respect prototype priority\n      what = Object.getPrototypeOf(what);\n    }\n    return res;\n  };\n\n  /**\n   * ReduxMixin\n   *\n   * @example\n   *     const ReduxMixin = PolymerRedux(store)\n   *     class Foo extends ReduxMixin(Polymer.Element) { }\n   *\n   * @polymerMixinClass\n   *\n   * @param {Polymer.Element} parent The polymer parent element.\n   * @return {Function} PolymerRedux mixed class.\n   */\n  return parent => class ReduxMixin extends parent {\n    constructor () {\n      super();\n\n      // Collect the action creators first as property changes trigger\n      // dispatches from observers, see #65, #66, #67\n      const actions = collect(this.constructor, 'actions');\n      Object.defineProperty(this, '_reduxActions', {\n        configurable: true,\n        value: actions\n      });\n    }\n\n    connectedCallback () {\n      super.connectedCallback();\n      const properties = collect(this.constructor, 'properties');\n      bind(this, properties);\n    }\n\n    disconnectedCallback () {\n      super.disconnectedCallback();\n      unbind(this);\n    }\n\n    /**\n     * Dispatches an action to the Redux store.\n     *\n     * @example\n     *     element.dispatch({ type: 'ACTION' })\n     *\n     * @example\n     *     element.dispatch('actionCreator', 'foo', 'bar')\n     *\n     * @example\n     *     element.dispatch((dispatch) => {\n     *         dispatch({ type: 'MIDDLEWARE'})\n     *     })\n     *\n     * @param  {...*} args\n     * @return {Object} The action.\n     */\n    dispatch (...args) {\n      const actions = this._reduxActions;\n\n      // Action creator\n      let [action] = args;\n      if (typeof action === 'string') {\n        if (typeof actions[action] !== 'function') {\n          throw new TypeError(`PolymerRedux: <${this.constructor.is}> invalid action creator \"${action}\"`);\n        }\n        action = actions[action](...args.slice(1));\n      }\n\n      // Proxy async dispatch\n      if (typeof action === 'function') {\n        const originalAction = action;\n        action = (...args) => {\n          // Replace redux dispatch\n          args.splice(0, 1, (...args) => {\n            return this.dispatch(...args);\n          });\n          return originalAction(...args);\n        };\n\n        // Copy props from the original action to the proxy.\n        // see https://github.com/tur-nr/polymer-redux/issues/98\n        Object.keys(originalAction).forEach(prop => {\n          action[prop] = originalAction[prop];\n        });\n      }\n\n      return store.dispatch(action);\n    }\n\n    /**\n     * Gets the current state in the Redux store.\n     *\n     * @return {*}\n     */\n    getState () {\n      return store.getState();\n    }\n  };\n}\n\n\n// WEBPACK FOOTER //\n// ../src/core/mixins/polymer-redux.js"],"sourceRoot":""}